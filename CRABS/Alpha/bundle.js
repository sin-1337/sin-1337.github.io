if("function"!=typeof window.ImportBondageCollege)throw alert("Club not detected! Please only use this while you have Club open!"),"Dependency not met";if(void 0!==window.CRABS_Loaded)throw alert("CRABS is already detected in current window. To reload, please refresh the window."),"Already loaded";window.CRABS_Loaded=!1,console.debug("CRABS: Parse start..."),function(){"use strict";"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var exports,bcmodsdk={};exports=bcmodsdk,function(){const o="1.2.0";function e(o){alert("Mod ERROR:\n"+o);const e=new Error(o);throw console.error(e),e}const t=new TextEncoder;function n(o){return!!o&&"object"==typeof o&&!Array.isArray(o)}function r(o){const e=new Set;return o.filter((o=>!e.has(o)&&e.add(o)))}const i=new Map,a=new Set;function c(o){a.has(o)||(a.add(o),console.warn(o))}function s(o){const e=[],t=new Map,n=new Set;for(const r of f.values()){const i=r.patching.get(o.name);if(i){e.push(...i.hooks);for(const[e,a]of i.patches.entries())t.has(e)&&t.get(e)!==a&&c(`ModSDK: Mod '${r.name}' is patching function ${o.name} with same pattern that is already applied by different mod, but with different pattern:\nPattern:\n${e}\nPatch1:\n${t.get(e)||""}\nPatch2:\n${a}`),t.set(e,a),n.add(r.name)}}e.sort(((o,e)=>e.priority-o.priority));const r=function(o,e){if(0===e.size)return o;let t=o.toString().replaceAll("\r\n","\n");for(const[n,r]of e.entries())t.includes(n)||c(`ModSDK: Patching ${o.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(o.original,t);let i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,o.name,n),c=r.apply(this,e);return null==a||a(),c};for(let t=e.length-1;t>=0;t--){const n=e[t],r=i;i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,o.name,n.mod),c=n.hook.apply(this,[e,o=>{if(1!==arguments.length||!Array.isArray(e))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof o}`);return r.call(this,o)}]);return null==a||a(),c}}return{hooks:e,patches:t,patchesSources:n,enter:i,final:r}}function l(o,e=!1){let r=i.get(o);if(r)e&&(r.precomputed=s(r));else{let e=window;const a=o.split(".");for(let t=0;t<a.length-1;t++)if(e=e[a[t]],!n(e))throw new Error(`ModSDK: Function ${o} to be patched not found; ${a.slice(0,t+1).join(".")} is not object`);const c=e[a[a.length-1]];if("function"!=typeof c)throw new Error(`ModSDK: Function ${o} to be patched not found`);const l=function(o){let e=-1;for(const n of t.encode(o)){let o=255&(e^n);for(let e=0;e<8;e++)o=1&o?-306674912^o>>>1:o>>>1;e=e>>>8^o}return(~e>>>0).toString(16).padStart(8,"0").toUpperCase()}(c.toString().replaceAll("\r\n","\n")),d={name:o,original:c,originalHash:l};r=Object.assign(Object.assign({},d),{precomputed:s(d),router:()=>{},context:e,contextProperty:a[a.length-1]}),r.router=function(o){return function(...e){return o.precomputed.enter.apply(this,[e])}}(r),i.set(o,r),e[r.contextProperty]=r.router}return r}function d(){for(const o of i.values())o.precomputed=s(o)}function p(){const o=new Map;for(const[e,t]of i)o.set(e,{name:e,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((o=>o.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return o}const f=new Map;function u(o){f.get(o.name)!==o&&e(`Failed to unload mod '${o.name}': Not registered`),f.delete(o.name),o.loaded=!1,d()}function g(o,t){o&&"object"==typeof o||e("Failed to register mod: Expected info object, got "+typeof o),"string"==typeof o.name&&o.name||e("Failed to register mod: Expected name to be non-empty string, got "+typeof o.name);let r=`'${o.name}'`;"string"==typeof o.fullName&&o.fullName||e(`Failed to register mod ${r}: Expected fullName to be non-empty string, got ${typeof o.fullName}`),r=`'${o.fullName} (${o.name})'`,"string"!=typeof o.version&&e(`Failed to register mod ${r}: Expected version to be string, got ${typeof o.version}`),o.repository||(o.repository=void 0),void 0!==o.repository&&"string"!=typeof o.repository&&e(`Failed to register mod ${r}: Expected repository to be undefined or string, got ${typeof o.version}`),null==t&&(t={}),t&&"object"==typeof t||e(`Failed to register mod ${r}: Expected options to be undefined or object, got ${typeof t}`);const i=!0===t.allowReplace,a=f.get(o.name);a&&(a.allowReplace&&i||e(`Refusing to load mod ${r}: it is already loaded and doesn't allow being replaced.\nWas the mod loaded multiple times?`),u(a));const c=o=>{let e=g.patching.get(o.name);return e||(e={hooks:[],patches:new Map},g.patching.set(o.name,e)),e},s=(o,t)=>(...n)=>{var i,a;const c=null===(a=(i=m.errorReporterHooks).apiEndpointEnter)||void 0===a?void 0:a.call(i,o,g.name);g.loaded||e(`Mod ${r} attempted to call SDK function after being unloaded`);const s=t(...n);return null==c||c(),s},p={unload:s("unload",(()=>u(g))),hookFunction:s("hookFunction",((o,t,n)=>{"string"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);"number"!=typeof t&&e(`Mod ${r} failed to hook function '${o}': Expected priority number, got ${typeof t}`),"function"!=typeof n&&e(`Mod ${r} failed to hook function '${o}': Expected hook function, got ${typeof n}`);const s={mod:g.name,priority:t,hook:n};return a.hooks.push(s),d(),()=>{const o=a.hooks.indexOf(s);o>=0&&(a.hooks.splice(o,1),d())}})),patchFunction:s("patchFunction",((o,t)=>{"string"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);n(t)||e(`Mod ${r} failed to patch function '${o}': Expected patches object, got ${typeof t}`);for(const[n,i]of Object.entries(t))"string"==typeof i?a.patches.set(n,i):null===i?a.patches.delete(n):e(`Mod ${r} failed to patch function '${o}': Invalid format of patch '${n}'`);d()})),removePatches:s("removePatches",(o=>{"string"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const t=l(o);c(t).patches.clear(),d()})),callOriginal:s("callOriginal",((o,t,n)=>{"string"==typeof o&&o||e(`Mod ${r} failed to call a function: Expected function name string, got ${typeof o}`);const i=l(o);return Array.isArray(t)||e(`Mod ${r} failed to call a function: Expected args array, got ${typeof t}`),i.original.apply(null!=n?n:globalThis,t)})),getOriginalHash:s("getOriginalHash",(o=>("string"==typeof o&&o||e(`Mod ${r} failed to get hash: Expected function name string, got ${typeof o}`),l(o).originalHash)))},g={name:o.name,fullName:o.fullName,version:o.version,repository:o.repository,allowReplace:i,api:p,loaded:!0,patching:new Map};return f.set(o.name,g),Object.freeze(p)}function h(){const o=[];for(const e of f.values())o.push({name:e.name,fullName:e.fullName,version:e.version,repository:e.repository});return o}let m;const y=void 0===window.bcModSdk?window.bcModSdk=function(){const e={version:o,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:p,errorReporterHooks:Object.seal({apiEndpointEnter:null,hookEnter:null,hookChainExit:null})};return m=e,Object.freeze(e)}():(n(window.bcModSdk)||e("Failed to init Mod SDK: Name already in use"),1!==window.bcModSdk.apiVersion&&e(`Failed to init Mod SDK: Different version already loaded ('1.2.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==o&&alert(`Mod SDK warning: Loading different but compatible versions ('1.2.0' vs '${window.bcModSdk.version}')\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk);Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=y}();var bcModSDK=getDefaultExportFromCjs(bcmodsdk);function __awaiter(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):(value=result.value,value instanceof P?value:new P((function(resolve){resolve(value)}))).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))}Object.create;Object.create;"function"==typeof SuppressedError&&SuppressedError;
/*! @license DOMPurify 3.2.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.5/LICENSE */
const{entries:entries,setPrototypeOf:setPrototypeOf,isFrozen:isFrozen,getPrototypeOf:getPrototypeOf,getOwnPropertyDescriptor:getOwnPropertyDescriptor}=Object;let{freeze:freeze,seal:seal,create:create}=Object,{apply:apply,construct:construct}="undefined"!=typeof Reflect&&Reflect;freeze||(freeze=function(x){return x}),seal||(seal=function(x){return x}),apply||(apply=function(fun,thisValue,args){return fun.apply(thisValue,args)}),construct||(construct=function(Func,args){return new Func(...args)});const arrayForEach=unapply(Array.prototype.forEach),arrayLastIndexOf=unapply(Array.prototype.lastIndexOf),arrayPop=unapply(Array.prototype.pop),arrayPush=unapply(Array.prototype.push),arraySplice=unapply(Array.prototype.splice),stringToLowerCase=unapply(String.prototype.toLowerCase),stringToString=unapply(String.prototype.toString),stringMatch=unapply(String.prototype.match),stringReplace=unapply(String.prototype.replace),stringIndexOf=unapply(String.prototype.indexOf),stringTrim=unapply(String.prototype.trim),objectHasOwnProperty=unapply(Object.prototype.hasOwnProperty),regExpTest=unapply(RegExp.prototype.test),typeErrorCreate=(func=TypeError,function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];return construct(func,args)});var func;function unapply(func){return function(thisArg){thisArg instanceof RegExp&&(thisArg.lastIndex=0);for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)args[_key-1]=arguments[_key];return apply(func,thisArg,args)}}function addToSet(set,array){let transformCaseFunc=arguments.length>2&&void 0!==arguments[2]?arguments[2]:stringToLowerCase;setPrototypeOf&&setPrototypeOf(set,null);let l=array.length;for(;l--;){let element=array[l];if("string"==typeof element){const lcElement=transformCaseFunc(element);lcElement!==element&&(isFrozen(array)||(array[l]=lcElement),element=lcElement)}set[element]=!0}return set}function cleanArray(array){for(let index=0;index<array.length;index++){objectHasOwnProperty(array,index)||(array[index]=null)}return array}function clone(object){const newObject=create(null);for(const[property,value]of entries(object)){objectHasOwnProperty(object,property)&&(Array.isArray(value)?newObject[property]=cleanArray(value):value&&"object"==typeof value&&value.constructor===Object?newObject[property]=clone(value):newObject[property]=value)}return newObject}function lookupGetter(object,prop){for(;null!==object;){const desc=getOwnPropertyDescriptor(object,prop);if(desc){if(desc.get)return unapply(desc.get);if("function"==typeof desc.value)return unapply(desc.value)}object=getPrototypeOf(object)}return function(){return null}}const html$1=freeze(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dialog","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),svg$1=freeze(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","view","vkern"]),svgFilters=freeze(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),svgDisallowed=freeze(["animate","color-profile","cursor","discard","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignobject","hatch","hatchpath","mesh","meshgradient","meshpatch","meshrow","missing-glyph","script","set","solidcolor","unknown","use"]),mathMl$1=freeze(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover","mprescripts"]),mathMlDisallowed=freeze(["maction","maligngroup","malignmark","mlongdiv","mscarries","mscarry","msgroup","mstack","msline","msrow","semantics","annotation","annotation-xml","mprescripts","none"]),text=freeze(["#text"]),html=freeze(["accept","action","align","alt","autocapitalize","autocomplete","autopictureinpicture","autoplay","background","bgcolor","border","capture","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","controlslist","coords","crossorigin","datetime","decoding","default","dir","disabled","disablepictureinpicture","disableremoteplayback","download","draggable","enctype","enterkeyhint","face","for","headers","height","hidden","high","href","hreflang","id","inputmode","integrity","ismap","kind","label","lang","list","loading","loop","low","max","maxlength","media","method","min","minlength","multiple","muted","name","nonce","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","playsinline","popover","popovertarget","popovertargetaction","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","translate","type","usemap","valign","value","width","wrap","xmlns","slot"]),svg=freeze(["accent-height","accumulate","additive","alignment-baseline","amplitude","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clippathunits","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","exponent","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","intercept","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","slope","specularconstant","specularexponent","spreadmethod","startoffset","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","systemlanguage","tabindex","tablevalues","targetx","targety","transform","transform-origin","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),mathMl=freeze(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),xml=freeze(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),MUSTACHE_EXPR=seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm),ERB_EXPR=seal(/<%[\w\W]*|[\w\W]*%>/gm),TMPLIT_EXPR=seal(/\$\{[\w\W]*/gm),DATA_ATTR=seal(/^data-[\-\w.\u00B7-\uFFFF]+$/),ARIA_ATTR=seal(/^aria-[\-\w]+$/),IS_ALLOWED_URI=seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),IS_SCRIPT_OR_DATA=seal(/^(?:\w+script|data):/i),ATTR_WHITESPACE=seal(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g),DOCTYPE_NAME=seal(/^html$/i),CUSTOM_ELEMENT=seal(/^[a-z][.\w]*(-[.\w]+)+$/i);var EXPRESSIONS=Object.freeze({__proto__:null,ARIA_ATTR:ARIA_ATTR,ATTR_WHITESPACE:ATTR_WHITESPACE,CUSTOM_ELEMENT:CUSTOM_ELEMENT,DATA_ATTR:DATA_ATTR,DOCTYPE_NAME:DOCTYPE_NAME,ERB_EXPR:ERB_EXPR,IS_ALLOWED_URI:IS_ALLOWED_URI,IS_SCRIPT_OR_DATA:IS_SCRIPT_OR_DATA,MUSTACHE_EXPR:MUSTACHE_EXPR,TMPLIT_EXPR:TMPLIT_EXPR});const NODE_TYPE_element=1,NODE_TYPE_text=3,NODE_TYPE_progressingInstruction=7,NODE_TYPE_comment=8,NODE_TYPE_document=9,getGlobal=function(){return"undefined"==typeof window?null:window};var purify=function createDOMPurify(){let window=arguments.length>0&&void 0!==arguments[0]?arguments[0]:getGlobal();const DOMPurify=root=>createDOMPurify(root);if(DOMPurify.version="3.2.5",DOMPurify.removed=[],!window||!window.document||window.document.nodeType!==NODE_TYPE_document||!window.Element)return DOMPurify.isSupported=!1,DOMPurify;let{document:document}=window;const originalDocument=document,currentScript=originalDocument.currentScript,{DocumentFragment:DocumentFragment,HTMLTemplateElement:HTMLTemplateElement,Node:Node,Element:Element,NodeFilter:NodeFilter,NamedNodeMap:NamedNodeMap=window.NamedNodeMap||window.MozNamedAttrMap,HTMLFormElement:HTMLFormElement,DOMParser:DOMParser,trustedTypes:trustedTypes}=window,ElementPrototype=Element.prototype,cloneNode=lookupGetter(ElementPrototype,"cloneNode"),remove=lookupGetter(ElementPrototype,"remove"),getNextSibling=lookupGetter(ElementPrototype,"nextSibling"),getChildNodes=lookupGetter(ElementPrototype,"childNodes"),getParentNode=lookupGetter(ElementPrototype,"parentNode");if("function"==typeof HTMLTemplateElement){const template=document.createElement("template");template.content&&template.content.ownerDocument&&(document=template.content.ownerDocument)}let trustedTypesPolicy,emptyHTML="";const{implementation:implementation,createNodeIterator:createNodeIterator,createDocumentFragment:createDocumentFragment,getElementsByTagName:getElementsByTagName}=document,{importNode:importNode}=originalDocument;let hooks={afterSanitizeAttributes:[],afterSanitizeElements:[],afterSanitizeShadowDOM:[],beforeSanitizeAttributes:[],beforeSanitizeElements:[],beforeSanitizeShadowDOM:[],uponSanitizeAttribute:[],uponSanitizeElement:[],uponSanitizeShadowNode:[]};DOMPurify.isSupported="function"==typeof entries&&"function"==typeof getParentNode&&implementation&&void 0!==implementation.createHTMLDocument;const{MUSTACHE_EXPR:MUSTACHE_EXPR,ERB_EXPR:ERB_EXPR,TMPLIT_EXPR:TMPLIT_EXPR,DATA_ATTR:DATA_ATTR,ARIA_ATTR:ARIA_ATTR,IS_SCRIPT_OR_DATA:IS_SCRIPT_OR_DATA,ATTR_WHITESPACE:ATTR_WHITESPACE,CUSTOM_ELEMENT:CUSTOM_ELEMENT}=EXPRESSIONS;let{IS_ALLOWED_URI:IS_ALLOWED_URI$1}=EXPRESSIONS,ALLOWED_TAGS=null;const DEFAULT_ALLOWED_TAGS=addToSet({},[...html$1,...svg$1,...svgFilters,...mathMl$1,...text]);let ALLOWED_ATTR=null;const DEFAULT_ALLOWED_ATTR=addToSet({},[...html,...svg,...mathMl,...xml]);let CUSTOM_ELEMENT_HANDLING=Object.seal(create(null,{tagNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},attributeNameCheck:{writable:!0,configurable:!1,enumerable:!0,value:null},allowCustomizedBuiltInElements:{writable:!0,configurable:!1,enumerable:!0,value:!1}})),FORBID_TAGS=null,FORBID_ATTR=null,ALLOW_ARIA_ATTR=!0,ALLOW_DATA_ATTR=!0,ALLOW_UNKNOWN_PROTOCOLS=!1,ALLOW_SELF_CLOSE_IN_ATTR=!0,SAFE_FOR_TEMPLATES=!1,SAFE_FOR_XML=!0,WHOLE_DOCUMENT=!1,SET_CONFIG=!1,FORCE_BODY=!1,RETURN_DOM=!1,RETURN_DOM_FRAGMENT=!1,RETURN_TRUSTED_TYPE=!1,SANITIZE_DOM=!0,SANITIZE_NAMED_PROPS=!1,KEEP_CONTENT=!0,IN_PLACE=!1,USE_PROFILES={},FORBID_CONTENTS=null;const DEFAULT_FORBID_CONTENTS=addToSet({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","noscript","plaintext","script","style","svg","template","thead","title","video","xmp"]);let DATA_URI_TAGS=null;const DEFAULT_DATA_URI_TAGS=addToSet({},["audio","video","img","source","image","track"]);let URI_SAFE_ATTRIBUTES=null;const DEFAULT_URI_SAFE_ATTRIBUTES=addToSet({},["alt","class","for","id","label","name","pattern","placeholder","role","summary","title","value","style","xmlns"]),MATHML_NAMESPACE="http://www.w3.org/1998/Math/MathML",SVG_NAMESPACE="http://www.w3.org/2000/svg",HTML_NAMESPACE="http://www.w3.org/1999/xhtml";let NAMESPACE=HTML_NAMESPACE,IS_EMPTY_INPUT=!1,ALLOWED_NAMESPACES=null;const DEFAULT_ALLOWED_NAMESPACES=addToSet({},[MATHML_NAMESPACE,SVG_NAMESPACE,HTML_NAMESPACE],stringToString);let MATHML_TEXT_INTEGRATION_POINTS=addToSet({},["mi","mo","mn","ms","mtext"]),HTML_INTEGRATION_POINTS=addToSet({},["annotation-xml"]);const COMMON_SVG_AND_HTML_ELEMENTS=addToSet({},["title","style","font","a","script"]);let PARSER_MEDIA_TYPE=null;const SUPPORTED_PARSER_MEDIA_TYPES=["application/xhtml+xml","text/html"];let transformCaseFunc=null,CONFIG=null;const formElement=document.createElement("form"),isRegexOrFunction=function(testValue){return testValue instanceof RegExp||testValue instanceof Function},_parseConfig=function(){let cfg=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!CONFIG||CONFIG!==cfg){if(cfg&&"object"==typeof cfg||(cfg={}),cfg=clone(cfg),PARSER_MEDIA_TYPE=-1===SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE)?"text/html":cfg.PARSER_MEDIA_TYPE,transformCaseFunc="application/xhtml+xml"===PARSER_MEDIA_TYPE?stringToString:stringToLowerCase,ALLOWED_TAGS=objectHasOwnProperty(cfg,"ALLOWED_TAGS")?addToSet({},cfg.ALLOWED_TAGS,transformCaseFunc):DEFAULT_ALLOWED_TAGS,ALLOWED_ATTR=objectHasOwnProperty(cfg,"ALLOWED_ATTR")?addToSet({},cfg.ALLOWED_ATTR,transformCaseFunc):DEFAULT_ALLOWED_ATTR,ALLOWED_NAMESPACES=objectHasOwnProperty(cfg,"ALLOWED_NAMESPACES")?addToSet({},cfg.ALLOWED_NAMESPACES,stringToString):DEFAULT_ALLOWED_NAMESPACES,URI_SAFE_ATTRIBUTES=objectHasOwnProperty(cfg,"ADD_URI_SAFE_ATTR")?addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),cfg.ADD_URI_SAFE_ATTR,transformCaseFunc):DEFAULT_URI_SAFE_ATTRIBUTES,DATA_URI_TAGS=objectHasOwnProperty(cfg,"ADD_DATA_URI_TAGS")?addToSet(clone(DEFAULT_DATA_URI_TAGS),cfg.ADD_DATA_URI_TAGS,transformCaseFunc):DEFAULT_DATA_URI_TAGS,FORBID_CONTENTS=objectHasOwnProperty(cfg,"FORBID_CONTENTS")?addToSet({},cfg.FORBID_CONTENTS,transformCaseFunc):DEFAULT_FORBID_CONTENTS,FORBID_TAGS=objectHasOwnProperty(cfg,"FORBID_TAGS")?addToSet({},cfg.FORBID_TAGS,transformCaseFunc):{},FORBID_ATTR=objectHasOwnProperty(cfg,"FORBID_ATTR")?addToSet({},cfg.FORBID_ATTR,transformCaseFunc):{},USE_PROFILES=!!objectHasOwnProperty(cfg,"USE_PROFILES")&&cfg.USE_PROFILES,ALLOW_ARIA_ATTR=!1!==cfg.ALLOW_ARIA_ATTR,ALLOW_DATA_ATTR=!1!==cfg.ALLOW_DATA_ATTR,ALLOW_UNKNOWN_PROTOCOLS=cfg.ALLOW_UNKNOWN_PROTOCOLS||!1,ALLOW_SELF_CLOSE_IN_ATTR=!1!==cfg.ALLOW_SELF_CLOSE_IN_ATTR,SAFE_FOR_TEMPLATES=cfg.SAFE_FOR_TEMPLATES||!1,SAFE_FOR_XML=!1!==cfg.SAFE_FOR_XML,WHOLE_DOCUMENT=cfg.WHOLE_DOCUMENT||!1,RETURN_DOM=cfg.RETURN_DOM||!1,RETURN_DOM_FRAGMENT=cfg.RETURN_DOM_FRAGMENT||!1,RETURN_TRUSTED_TYPE=cfg.RETURN_TRUSTED_TYPE||!1,FORCE_BODY=cfg.FORCE_BODY||!1,SANITIZE_DOM=!1!==cfg.SANITIZE_DOM,SANITIZE_NAMED_PROPS=cfg.SANITIZE_NAMED_PROPS||!1,KEEP_CONTENT=!1!==cfg.KEEP_CONTENT,IN_PLACE=cfg.IN_PLACE||!1,IS_ALLOWED_URI$1=cfg.ALLOWED_URI_REGEXP||IS_ALLOWED_URI,NAMESPACE=cfg.NAMESPACE||HTML_NAMESPACE,MATHML_TEXT_INTEGRATION_POINTS=cfg.MATHML_TEXT_INTEGRATION_POINTS||MATHML_TEXT_INTEGRATION_POINTS,HTML_INTEGRATION_POINTS=cfg.HTML_INTEGRATION_POINTS||HTML_INTEGRATION_POINTS,CUSTOM_ELEMENT_HANDLING=cfg.CUSTOM_ELEMENT_HANDLING||{},cfg.CUSTOM_ELEMENT_HANDLING&&isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)&&(CUSTOM_ELEMENT_HANDLING.tagNameCheck=cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck),cfg.CUSTOM_ELEMENT_HANDLING&&isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)&&(CUSTOM_ELEMENT_HANDLING.attributeNameCheck=cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck),cfg.CUSTOM_ELEMENT_HANDLING&&"boolean"==typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements&&(CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements=cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements),SAFE_FOR_TEMPLATES&&(ALLOW_DATA_ATTR=!1),RETURN_DOM_FRAGMENT&&(RETURN_DOM=!0),USE_PROFILES&&(ALLOWED_TAGS=addToSet({},text),ALLOWED_ATTR=[],!0===USE_PROFILES.html&&(addToSet(ALLOWED_TAGS,html$1),addToSet(ALLOWED_ATTR,html)),!0===USE_PROFILES.svg&&(addToSet(ALLOWED_TAGS,svg$1),addToSet(ALLOWED_ATTR,svg),addToSet(ALLOWED_ATTR,xml)),!0===USE_PROFILES.svgFilters&&(addToSet(ALLOWED_TAGS,svgFilters),addToSet(ALLOWED_ATTR,svg),addToSet(ALLOWED_ATTR,xml)),!0===USE_PROFILES.mathMl&&(addToSet(ALLOWED_TAGS,mathMl$1),addToSet(ALLOWED_ATTR,mathMl),addToSet(ALLOWED_ATTR,xml))),cfg.ADD_TAGS&&(ALLOWED_TAGS===DEFAULT_ALLOWED_TAGS&&(ALLOWED_TAGS=clone(ALLOWED_TAGS)),addToSet(ALLOWED_TAGS,cfg.ADD_TAGS,transformCaseFunc)),cfg.ADD_ATTR&&(ALLOWED_ATTR===DEFAULT_ALLOWED_ATTR&&(ALLOWED_ATTR=clone(ALLOWED_ATTR)),addToSet(ALLOWED_ATTR,cfg.ADD_ATTR,transformCaseFunc)),cfg.ADD_URI_SAFE_ATTR&&addToSet(URI_SAFE_ATTRIBUTES,cfg.ADD_URI_SAFE_ATTR,transformCaseFunc),cfg.FORBID_CONTENTS&&(FORBID_CONTENTS===DEFAULT_FORBID_CONTENTS&&(FORBID_CONTENTS=clone(FORBID_CONTENTS)),addToSet(FORBID_CONTENTS,cfg.FORBID_CONTENTS,transformCaseFunc)),KEEP_CONTENT&&(ALLOWED_TAGS["#text"]=!0),WHOLE_DOCUMENT&&addToSet(ALLOWED_TAGS,["html","head","body"]),ALLOWED_TAGS.table&&(addToSet(ALLOWED_TAGS,["tbody"]),delete FORBID_TAGS.tbody),cfg.TRUSTED_TYPES_POLICY){if("function"!=typeof cfg.TRUSTED_TYPES_POLICY.createHTML)throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');if("function"!=typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL)throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');trustedTypesPolicy=cfg.TRUSTED_TYPES_POLICY,emptyHTML=trustedTypesPolicy.createHTML("")}else void 0===trustedTypesPolicy&&(trustedTypesPolicy=function(trustedTypes,purifyHostElement){if("object"!=typeof trustedTypes||"function"!=typeof trustedTypes.createPolicy)return null;let suffix=null;purifyHostElement&&purifyHostElement.hasAttribute("data-tt-policy-suffix")&&(suffix=purifyHostElement.getAttribute("data-tt-policy-suffix"));const policyName="dompurify"+(suffix?"#"+suffix:"");try{return trustedTypes.createPolicy(policyName,{createHTML:html=>html,createScriptURL:scriptUrl=>scriptUrl})}catch(_){return console.warn("TrustedTypes policy "+policyName+" could not be created."),null}}(trustedTypes,currentScript)),null!==trustedTypesPolicy&&"string"==typeof emptyHTML&&(emptyHTML=trustedTypesPolicy.createHTML(""));freeze&&freeze(cfg),CONFIG=cfg}},ALL_SVG_TAGS=addToSet({},[...svg$1,...svgFilters,...svgDisallowed]),ALL_MATHML_TAGS=addToSet({},[...mathMl$1,...mathMlDisallowed]),_forceRemove=function(node){arrayPush(DOMPurify.removed,{element:node});try{getParentNode(node).removeChild(node)}catch(_){remove(node)}},_removeAttribute=function(name,element){try{arrayPush(DOMPurify.removed,{attribute:element.getAttributeNode(name),from:element})}catch(_){arrayPush(DOMPurify.removed,{attribute:null,from:element})}if(element.removeAttribute(name),"is"===name)if(RETURN_DOM||RETURN_DOM_FRAGMENT)try{_forceRemove(element)}catch(_){}else try{element.setAttribute(name,"")}catch(_){}},_initDocument=function(dirty){let doc=null,leadingWhitespace=null;if(FORCE_BODY)dirty="<remove></remove>"+dirty;else{const matches=stringMatch(dirty,/^[\r\n\t ]+/);leadingWhitespace=matches&&matches[0]}"application/xhtml+xml"===PARSER_MEDIA_TYPE&&NAMESPACE===HTML_NAMESPACE&&(dirty='<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>'+dirty+"</body></html>");const dirtyPayload=trustedTypesPolicy?trustedTypesPolicy.createHTML(dirty):dirty;if(NAMESPACE===HTML_NAMESPACE)try{doc=(new DOMParser).parseFromString(dirtyPayload,PARSER_MEDIA_TYPE)}catch(_){}if(!doc||!doc.documentElement){doc=implementation.createDocument(NAMESPACE,"template",null);try{doc.documentElement.innerHTML=IS_EMPTY_INPUT?emptyHTML:dirtyPayload}catch(_){}}const body=doc.body||doc.documentElement;return dirty&&leadingWhitespace&&body.insertBefore(document.createTextNode(leadingWhitespace),body.childNodes[0]||null),NAMESPACE===HTML_NAMESPACE?getElementsByTagName.call(doc,WHOLE_DOCUMENT?"html":"body")[0]:WHOLE_DOCUMENT?doc.documentElement:body},_createNodeIterator=function(root){return createNodeIterator.call(root.ownerDocument||root,root,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_COMMENT|NodeFilter.SHOW_TEXT|NodeFilter.SHOW_PROCESSING_INSTRUCTION|NodeFilter.SHOW_CDATA_SECTION,null)},_isClobbered=function(element){return element instanceof HTMLFormElement&&("string"!=typeof element.nodeName||"string"!=typeof element.textContent||"function"!=typeof element.removeChild||!(element.attributes instanceof NamedNodeMap)||"function"!=typeof element.removeAttribute||"function"!=typeof element.setAttribute||"string"!=typeof element.namespaceURI||"function"!=typeof element.insertBefore||"function"!=typeof element.hasChildNodes)},_isNode=function(value){return"function"==typeof Node&&value instanceof Node};function _executeHooks(hooks,currentNode,data){arrayForEach(hooks,(hook=>{hook.call(DOMPurify,currentNode,data,CONFIG)}))}const _sanitizeElements=function(currentNode){let content=null;if(_executeHooks(hooks.beforeSanitizeElements,currentNode,null),_isClobbered(currentNode))return _forceRemove(currentNode),!0;const tagName=transformCaseFunc(currentNode.nodeName);if(_executeHooks(hooks.uponSanitizeElement,currentNode,{tagName:tagName,allowedTags:ALLOWED_TAGS}),currentNode.hasChildNodes()&&!_isNode(currentNode.firstElementChild)&&regExpTest(/<[/\w!]/g,currentNode.innerHTML)&&regExpTest(/<[/\w!]/g,currentNode.textContent))return _forceRemove(currentNode),!0;if(currentNode.nodeType===NODE_TYPE_progressingInstruction)return _forceRemove(currentNode),!0;if(SAFE_FOR_XML&&currentNode.nodeType===NODE_TYPE_comment&&regExpTest(/<[/\w]/g,currentNode.data))return _forceRemove(currentNode),!0;if(!ALLOWED_TAGS[tagName]||FORBID_TAGS[tagName]){if(!FORBID_TAGS[tagName]&&_isBasicCustomElement(tagName)){if(CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp&&regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck,tagName))return!1;if(CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function&&CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName))return!1}if(KEEP_CONTENT&&!FORBID_CONTENTS[tagName]){const parentNode=getParentNode(currentNode)||currentNode.parentNode,childNodes=getChildNodes(currentNode)||currentNode.childNodes;if(childNodes&&parentNode){for(let i=childNodes.length-1;i>=0;--i){const childClone=cloneNode(childNodes[i],!0);childClone.__removalCount=(currentNode.__removalCount||0)+1,parentNode.insertBefore(childClone,getNextSibling(currentNode))}}}return _forceRemove(currentNode),!0}return currentNode instanceof Element&&!function(element){let parent=getParentNode(element);parent&&parent.tagName||(parent={namespaceURI:NAMESPACE,tagName:"template"});const tagName=stringToLowerCase(element.tagName),parentTagName=stringToLowerCase(parent.tagName);return!!ALLOWED_NAMESPACES[element.namespaceURI]&&(element.namespaceURI===SVG_NAMESPACE?parent.namespaceURI===HTML_NAMESPACE?"svg"===tagName:parent.namespaceURI===MATHML_NAMESPACE?"svg"===tagName&&("annotation-xml"===parentTagName||MATHML_TEXT_INTEGRATION_POINTS[parentTagName]):Boolean(ALL_SVG_TAGS[tagName]):element.namespaceURI===MATHML_NAMESPACE?parent.namespaceURI===HTML_NAMESPACE?"math"===tagName:parent.namespaceURI===SVG_NAMESPACE?"math"===tagName&&HTML_INTEGRATION_POINTS[parentTagName]:Boolean(ALL_MATHML_TAGS[tagName]):element.namespaceURI===HTML_NAMESPACE?!(parent.namespaceURI===SVG_NAMESPACE&&!HTML_INTEGRATION_POINTS[parentTagName])&&!(parent.namespaceURI===MATHML_NAMESPACE&&!MATHML_TEXT_INTEGRATION_POINTS[parentTagName])&&!ALL_MATHML_TAGS[tagName]&&(COMMON_SVG_AND_HTML_ELEMENTS[tagName]||!ALL_SVG_TAGS[tagName]):!("application/xhtml+xml"!==PARSER_MEDIA_TYPE||!ALLOWED_NAMESPACES[element.namespaceURI]))}(currentNode)?(_forceRemove(currentNode),!0):"noscript"!==tagName&&"noembed"!==tagName&&"noframes"!==tagName||!regExpTest(/<\/no(script|embed|frames)/i,currentNode.innerHTML)?(SAFE_FOR_TEMPLATES&&currentNode.nodeType===NODE_TYPE_text&&(content=currentNode.textContent,arrayForEach([MUSTACHE_EXPR,ERB_EXPR,TMPLIT_EXPR],(expr=>{content=stringReplace(content,expr," ")})),currentNode.textContent!==content&&(arrayPush(DOMPurify.removed,{element:currentNode.cloneNode()}),currentNode.textContent=content)),_executeHooks(hooks.afterSanitizeElements,currentNode,null),!1):(_forceRemove(currentNode),!0)},_isValidAttribute=function(lcTag,lcName,value){if(SANITIZE_DOM&&("id"===lcName||"name"===lcName)&&(value in document||value in formElement))return!1;if(ALLOW_DATA_ATTR&&!FORBID_ATTR[lcName]&&regExpTest(DATA_ATTR,lcName));else if(ALLOW_ARIA_ATTR&&regExpTest(ARIA_ATTR,lcName));else if(!ALLOWED_ATTR[lcName]||FORBID_ATTR[lcName]){if(!(_isBasicCustomElement(lcTag)&&(CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp&&regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck,lcTag)||CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function&&CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))&&(CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp&&regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck,lcName)||CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function&&CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName))||"is"===lcName&&CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements&&(CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp&&regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck,value)||CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function&&CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))return!1}else if(URI_SAFE_ATTRIBUTES[lcName]);else if(regExpTest(IS_ALLOWED_URI$1,stringReplace(value,ATTR_WHITESPACE,"")));else if("src"!==lcName&&"xlink:href"!==lcName&&"href"!==lcName||"script"===lcTag||0!==stringIndexOf(value,"data:")||!DATA_URI_TAGS[lcTag]){if(ALLOW_UNKNOWN_PROTOCOLS&&!regExpTest(IS_SCRIPT_OR_DATA,stringReplace(value,ATTR_WHITESPACE,"")));else if(value)return!1}else;return!0},_isBasicCustomElement=function(tagName){return"annotation-xml"!==tagName&&stringMatch(tagName,CUSTOM_ELEMENT)},_sanitizeAttributes=function(currentNode){_executeHooks(hooks.beforeSanitizeAttributes,currentNode,null);const{attributes:attributes}=currentNode;if(!attributes||_isClobbered(currentNode))return;const hookEvent={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:ALLOWED_ATTR,forceKeepAttr:void 0};let l=attributes.length;for(;l--;){const attr=attributes[l],{name:name,namespaceURI:namespaceURI,value:attrValue}=attr,lcName=transformCaseFunc(name);let value="value"===name?attrValue:stringTrim(attrValue);if(hookEvent.attrName=lcName,hookEvent.attrValue=value,hookEvent.keepAttr=!0,hookEvent.forceKeepAttr=void 0,_executeHooks(hooks.uponSanitizeAttribute,currentNode,hookEvent),value=hookEvent.attrValue,!SANITIZE_NAMED_PROPS||"id"!==lcName&&"name"!==lcName||(_removeAttribute(name,currentNode),value="user-content-"+value),SAFE_FOR_XML&&regExpTest(/((--!?|])>)|<\/(style|title)/i,value)){_removeAttribute(name,currentNode);continue}if(hookEvent.forceKeepAttr)continue;if(_removeAttribute(name,currentNode),!hookEvent.keepAttr)continue;if(!ALLOW_SELF_CLOSE_IN_ATTR&&regExpTest(/\/>/i,value)){_removeAttribute(name,currentNode);continue}SAFE_FOR_TEMPLATES&&arrayForEach([MUSTACHE_EXPR,ERB_EXPR,TMPLIT_EXPR],(expr=>{value=stringReplace(value,expr," ")}));const lcTag=transformCaseFunc(currentNode.nodeName);if(_isValidAttribute(lcTag,lcName,value)){if(trustedTypesPolicy&&"object"==typeof trustedTypes&&"function"==typeof trustedTypes.getAttributeType)if(namespaceURI);else switch(trustedTypes.getAttributeType(lcTag,lcName)){case"TrustedHTML":value=trustedTypesPolicy.createHTML(value);break;case"TrustedScriptURL":value=trustedTypesPolicy.createScriptURL(value)}try{namespaceURI?currentNode.setAttributeNS(namespaceURI,name,value):currentNode.setAttribute(name,value),_isClobbered(currentNode)?_forceRemove(currentNode):arrayPop(DOMPurify.removed)}catch(_){}}}_executeHooks(hooks.afterSanitizeAttributes,currentNode,null)},_sanitizeShadowDOM=function _sanitizeShadowDOM(fragment){let shadowNode=null;const shadowIterator=_createNodeIterator(fragment);for(_executeHooks(hooks.beforeSanitizeShadowDOM,fragment,null);shadowNode=shadowIterator.nextNode();)_executeHooks(hooks.uponSanitizeShadowNode,shadowNode,null),_sanitizeElements(shadowNode),_sanitizeAttributes(shadowNode),shadowNode.content instanceof DocumentFragment&&_sanitizeShadowDOM(shadowNode.content);_executeHooks(hooks.afterSanitizeShadowDOM,fragment,null)};return DOMPurify.sanitize=function(dirty){let cfg=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},body=null,importedNode=null,currentNode=null,returnNode=null;if(IS_EMPTY_INPUT=!dirty,IS_EMPTY_INPUT&&(dirty="\x3c!--\x3e"),"string"!=typeof dirty&&!_isNode(dirty)){if("function"!=typeof dirty.toString)throw typeErrorCreate("toString is not a function");if("string"!=typeof(dirty=dirty.toString()))throw typeErrorCreate("dirty is not a string, aborting")}if(!DOMPurify.isSupported)return dirty;if(SET_CONFIG||_parseConfig(cfg),DOMPurify.removed=[],"string"==typeof dirty&&(IN_PLACE=!1),IN_PLACE){if(dirty.nodeName){const tagName=transformCaseFunc(dirty.nodeName);if(!ALLOWED_TAGS[tagName]||FORBID_TAGS[tagName])throw typeErrorCreate("root node is forbidden and cannot be sanitized in-place")}}else if(dirty instanceof Node)body=_initDocument("\x3c!----\x3e"),importedNode=body.ownerDocument.importNode(dirty,!0),importedNode.nodeType===NODE_TYPE_element&&"BODY"===importedNode.nodeName||"HTML"===importedNode.nodeName?body=importedNode:body.appendChild(importedNode);else{if(!RETURN_DOM&&!SAFE_FOR_TEMPLATES&&!WHOLE_DOCUMENT&&-1===dirty.indexOf("<"))return trustedTypesPolicy&&RETURN_TRUSTED_TYPE?trustedTypesPolicy.createHTML(dirty):dirty;if(body=_initDocument(dirty),!body)return RETURN_DOM?null:RETURN_TRUSTED_TYPE?emptyHTML:""}body&&FORCE_BODY&&_forceRemove(body.firstChild);const nodeIterator=_createNodeIterator(IN_PLACE?dirty:body);for(;currentNode=nodeIterator.nextNode();)_sanitizeElements(currentNode),_sanitizeAttributes(currentNode),currentNode.content instanceof DocumentFragment&&_sanitizeShadowDOM(currentNode.content);if(IN_PLACE)return dirty;if(RETURN_DOM){if(RETURN_DOM_FRAGMENT)for(returnNode=createDocumentFragment.call(body.ownerDocument);body.firstChild;)returnNode.appendChild(body.firstChild);else returnNode=body;return(ALLOWED_ATTR.shadowroot||ALLOWED_ATTR.shadowrootmode)&&(returnNode=importNode.call(originalDocument,returnNode,!0)),returnNode}let serializedHTML=WHOLE_DOCUMENT?body.outerHTML:body.innerHTML;return WHOLE_DOCUMENT&&ALLOWED_TAGS["!doctype"]&&body.ownerDocument&&body.ownerDocument.doctype&&body.ownerDocument.doctype.name&&regExpTest(DOCTYPE_NAME,body.ownerDocument.doctype.name)&&(serializedHTML="<!DOCTYPE "+body.ownerDocument.doctype.name+">\n"+serializedHTML),SAFE_FOR_TEMPLATES&&arrayForEach([MUSTACHE_EXPR,ERB_EXPR,TMPLIT_EXPR],(expr=>{serializedHTML=stringReplace(serializedHTML,expr," ")})),trustedTypesPolicy&&RETURN_TRUSTED_TYPE?trustedTypesPolicy.createHTML(serializedHTML):serializedHTML},DOMPurify.setConfig=function(){_parseConfig(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}),SET_CONFIG=!0},DOMPurify.clearConfig=function(){CONFIG=null,SET_CONFIG=!1},DOMPurify.isValidAttribute=function(tag,attr,value){CONFIG||_parseConfig({});const lcTag=transformCaseFunc(tag),lcName=transformCaseFunc(attr);return _isValidAttribute(lcTag,lcName,value)},DOMPurify.addHook=function(entryPoint,hookFunction){"function"==typeof hookFunction&&arrayPush(hooks[entryPoint],hookFunction)},DOMPurify.removeHook=function(entryPoint,hookFunction){if(void 0!==hookFunction){const index=arrayLastIndexOf(hooks[entryPoint],hookFunction);return-1===index?void 0:arraySplice(hooks[entryPoint],index,1)[0]}return arrayPop(hooks[entryPoint])},DOMPurify.removeHooks=function(entryPoint){hooks[entryPoint]=[]},DOMPurify.removeAllHooks=function(){hooks={afterSanitizeAttributes:[],afterSanitizeElements:[],afterSanitizeShadowDOM:[],beforeSanitizeAttributes:[],beforeSanitizeElements:[],beforeSanitizeShadowDOM:[],uponSanitizeAttribute:[],uponSanitizeElement:[],uponSanitizeShadowNode:[]}},DOMPurify}();function styleInject(css,ref){void 0===ref&&(ref={});var insertAt=ref.insertAt;if(css&&"undefined"!=typeof document){var head=document.head||document.getElementsByTagName("head")[0],style=document.createElement("style");style.type="text/css","top"===insertAt&&head.firstChild?head.insertBefore(style,head.firstChild):head.appendChild(style),style.styleSheet?style.styleSheet.cssText=css:style.appendChild(document.createTextNode(css))}}styleInject('.CRABS_wrapper{background-attachment:fixed;background-color:#241f31;background-position:50%;background-repeat:no-repeat;background-size:cover;border:2px solid #fff;border-collapse:collapse;border-radius:12px;color:#fff;overflow:visible;position:relative;table-layout:auto;white-space:normal;width:99.5%!important;z-index:1}.CRABS_wrapper_header{box-sizing:border-box;display:flex;justify-content:flex-end;overflow:visible;padding:6px 8px 0 0;position:relative;width:100%;z-index:2}.CRABS_wrapper_close{background-color:#3a364a;border-radius:4px;color:#fff;cursor:pointer;font-size:14px;padding:2px 6px;text-decoration:none;transition:background-color .2s ease}.CRABS_wrapper_close:hover{background-color:#5c5670}.CRABS_wrapper_content{overflow:visible;padding:8px}.CRABS_tooltip-wrapper{align-items:center;display:inline-flex;position:relative;z-index:3}.CRABS_header_icons{cursor:pointer;height:auto;vertical-align:middle;width:.9em}.CRABS_logo{height:2.5em;width:2.5em}.CRABS_badge{cursor:pointer;height:auto;width:1.5em}.CRABS_Help_Icon,.CRABS_close{cursor:pointer;height:auto;width:.8em}.CRABS_icon{height:auto;width:1em}.CRABS_tooltip{background-color:rgba(0,0,0,.8);border-radius:4px;bottom:120%;color:#fff;opacity:0;padding:6px 10px;text-align:center;transition:opacity .2s ease-in-out;visibility:hidden;white-space:nowrap;z-index:10000}.CRABS_tooltip,.CRABS_tooltip:after{left:50%;position:absolute;transform:translateX(-50%)}.CRABS_tooltip:after{border:5px solid transparent;border-top-color:rgba(0,0,0,.8);content:"";top:100%}.CRABS_tooltip-wrapper:hover .CRABS_tooltip{opacity:1;visibility:visible}');let CRABS$1=class{constructor(CRABS){this.IMAGES={logo:"CRABS_Logo.png",error:"error.svg",close:"close.svg",help:"help.svg",settings:"settings.svg",admin:"admin.svg",vip:"vip.svg",player:"player.svg",you:"you.svg",owner:"owner.svg",sub:"sub.svg",trial:"trial.svg",lover:"lover.svg",bestfriend:"bestfriend.svg",friend:"friends.svg",whitelist:"whitelist.svg",blacklist:"blacklist.svg",ghost:"ghost.svg",thought:"thought.svg",connected:"connected.svg",keyGold:"keyGold.png",keySilver:"keySilver.png",keyBronze:"keyBronze.png",keyNull:"keyNull.svg",blindNone:"blindNone.svg",blindLight:"BlindLight.png",blindNormal:"BlindNormal.png",blindHeavy:"BlindHeavy.png",blindTotal:"BlindHeavy.png",deafNone:"deafNone.svg",deafLight:"DeafLight.png",deafNormal:"DeafNormal.png",deafHeavy:"DeafHeavy.png",deafTotal:"DeafHeavy.png",gagNone:"gagNone.svg",gagVeryLight:"GagLight.png",gagEasy:"GagLight.png",gagLight:"GagLight.png",gagNormal:"GagNormal.png",gagMedium:"GagNormal.png",gagHeavy:"GagHeavy.png",gagVeryHeavy:"GagHeavy.png",gagTotal:"GagTotal.png",gagTotal2:"GagTotal.png",gagTotal3:"GagTotal.png",gagTotal4:"GagTotal.png"},this.crabs=CRABS}fakePlayerCommand(action="all"){for(const[_,COMMAND]of Commands.entries())if("crabs"===COMMAND.Tag){COMMAND.Action(action);break}}showPlayerFocus(MemberNumber){const PLAYER=ChatRoomCharacter.find((C=>C.MemberNumber==MemberNumber));PLAYER?(ChatRoomStatusUpdate("Preference"),ChatRoomFocusCharacter(PLAYER)):ChatRoomSendLocal("This person is no longer in the room.")}detectMod(targetmod){return bcModSDK.getModsInfo().filter((x=>x.name==targetmod)).length>0}closeElement(elementId){if(elementId){const EXISTING=document.getElementById(elementId);EXISTING&&EXISTING.remove()}}attachEvent(classname,action,data,arg,event="click"){const CHAT=document.getElementById("TextAreaChatLog");if(!CHAT)return;const ELEMENTS=CHAT.getElementsByClassName(classname);for(const ELEMENT of ELEMENTS)ELEMENT.addEventListener(event,(e=>{const TARGET=e.currentTarget;if(arg)window[action](arg);else if(data){const DATA=TARGET.dataset[data];window[action](DATA)}else window[action]()}))}attachEventWithCallback(classname,callback,event="click"){const CHAT=document.getElementById("TextAreaChatLog");if(!CHAT)return;const ELEMENTS=CHAT.getElementsByClassName(classname);for(const ELEMENT of ELEMENTS)ELEMENT.addEventListener(event,callback)}sendoutput(output,elementId){const OUTPUT=document.createElement("template"),CLEAN_HTML=purify.sanitize(output,{USE_PROFILES:{html:!0}});OUTPUT.innerHTML=CLEAN_HTML;const CHAT=document.getElementById("TextAreaChatLog");if(CHAT){if(elementId){this.closeElement(elementId);const WRAPPER=document.createElement("div");WRAPPER.id=elementId,WRAPPER.appendChild(OUTPUT.content),CHAT.appendChild(WRAPPER)}else CHAT.appendChild(OUTPUT);ElementScrollToEnd("TextAreaChatLog")}else console.log("CRABS ERROR: Could not find chat element!");this.attachEvent("CRABS_Help_Icon","fakePlayerCommand",void 0,"help"),this.attachEvent("CRABS_close","crabsCloseItem","elementid")}template(template,args,wrapper=!0,wrapperArgs){let regex;for(const[KEY,VALUE]of Object.entries(args))regex=new RegExp(`{{${KEY}}}`,"g"),template=template.replace(regex,VALUE);if(wrapper&&(template='<div class="CRABS_wrapper">\n  <div class="CRABS_wrapper_header">\n      {{Help}} {{Close}}\n  </div>\n  <div class="CRABS_wrapper_content">\n    {{content}}\n  </div>\n</div>\n'.replace("{{Help}}",this.printimage("help","Help","CRABS_Help_Icon")).replace("{{content}}",template),wrapperArgs))for(const[KEY,VALUE]of Object.entries(wrapperArgs))regex=new RegExp(`{{${KEY}}}`,"g"),template=template.replace(regex,VALUE);return template}printimage(key,tooltip="",css_class="CRABS_icon",css_style="",data){let icon=this.IMAGES.error;key in this.IMAGES&&(icon=this.IMAGES[key]);let html="";return""!=tooltip&&(html+="<div class='CRABS_tooltip-wrapper'>"),html+="<img ",data&&(html+=`data-${data[0]}=${data[1]} `),html+=`alt='${key}' `,html+=`src='https://sin-1337.github.io/CRABS/images/${icon}' `,html+=`class='${css_class}'`,""!=css_style&&(html+=`style="${css_style}"`),html+=">",""!=tooltip&&(html+=`<div class='CRABS_tooltip'>${tooltip}</div>`),""!=tooltip&&(html+="</div>"),html}convertColor(hex,alpha=0){return hex=hex.replace(/^#/,""),`rgba(${parseInt(hex.slice(0,2),16)}, ${parseInt(hex.slice(2,4),16)}, ${parseInt(hex.slice(4,6),16)}, ${alpha})`}};styleInject('.CRABS_room-status{border-collapse:collapse;color:#fff;overflow:visible;table-layout:fixed;width:100%!important}.CRABS_room-status>tbody>tr>td{border-right:1px solid #ccc;height:auto;overflow:visible;padding:4px;text-align:center;vertical-align:middle;width:calc(100%/var(--col-count, 4))}.CRABS_roster_table_shrink{max-width:96%}.CRABS_roster_header_align{align-items:center;display:inline-flex;gap:4px;height:100%;justify-content:center}.CRABS_roster_header_align img,.CRABS_roster_header_align svg{vertical-align:middle}.CRABS_roster_center_table{display:flex;justify-content:center}.CRABS_card-container{display:grid;gap:2px;grid-template-columns:50% 50%}.CRABS_player-id:hover{cursor:pointer;text-decoration:underline}.CRABS_card{word-wrap:break-word;border-collapse:collapse;border-radius:8px;box-shadow:0 2px 5px rgba(0,0,0,.1);padding:2px 4px;position:relative;width:99%}.CRABS_card:after{background:linear-gradient(to right,transparent 10%,var(--border-color,#fff) 80%,transparent 100%);bottom:0;content:"";height:2px;left:30px;position:absolute;right:30px}.CRABS_overflow-wrapper{display:flex;height:1.1em;overflow:hidden;position:relative;width:100%}.CRABS_player-badge{cursor:pointer}.CRABS_player-badge img:hover{filter:brightness(1.5)}.CRABS_player-id{cursor:pointer;display:block;font-family:Arial,sans-serif;height:1.1em;line-height:1em;overflow:hidden;text-shadow:2px 2px 2px hsla(0,0%,100%,.7);white-space:nowrap}.CRABS_player-id:hover span{cursor:pointer;filter:brightness(1.5);text-decoration:underline}.CRABS_overflow-scroll{display:inline-block;position:relative;transition:transform 4s linear;-webkit-transition:transform 4s linear;-moz-transition:transform 4s linear;-ms-transition:transform 4s linear;-o-transition:transform 4s linear;white-space:nowrap;width:max-content}.CRABS_overflow-wrapper.scrolling:hover .CRABS_overflow-scroll{transform:translateX(var(--scroll-distance,-100%))}.CRABS_player-icons{height:1em;line-height:1em;min-height:1em}.CRABS_status-frame{overflow:visible;text-align:right;text-overflow:ellipsis;white-space:nowrap;width:auto}.CRABS_status-icon{border-radius:30px;display:inline-block;filter:var(--brightness,brightness(.2));height:1em}');styleInject(".CRABS_banner{border-collapse:collapse;color:#fff;width:100%!important}.CRABS_banner>tbody>tr>td{color:#fff;height:auto;padding:2px;text-align:center;width:auto}.CRABS_banner_logo_container{max-width:50px;width:50px}.CRABS_banner_version_container{max-width:150px;overflow-wrap:break-word;white-space:normal}.CRABS_dropdown_label{color:#fff;display:inline-block;font-weight:700;margin-bottom:4px;text-shadow:1px 1px 2px #000}.CRABS_dropdown{appearance:none;background-color:#3a364a;background-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg fill='%23fff' height='24' width='24' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m7 10 5 5 5-5z'/%3E%3C/svg%3E\");background-position:right 8px center;background-repeat:no-repeat;background-size:16px;border:1px solid #666;border-radius:6px;color:#fff;font-size:1em;padding:6px 8px;width:80%}.CRABS_dropdown:focus{background-color:#504b5d;border-color:#888;outline:none}");globalThis.VERSION="1.3.1.54 Alpha",globalThis.NAME="Crazy Roster Add-on By Sin",globalThis.NICKNAME="CRABS";const CRABS=bcModSDK.registerMod({name:NICKNAME,fullName:NAME,version:VERSION,repository:"https://github.com/sin-1337/CRABS"}),BANNER=new class extends CRABS$1{constructor(CRABS){super(CRABS)}attachPermissionChangeHandler(){const select=document.getElementById("CRABS_permission_select");select?select.addEventListener("change",(event=>{const TARGET=event.target,NEW_PERM_LEVEL=parseInt(TARGET.value,10);console.log("New permission level selected:",NEW_PERM_LEVEL),Player.ItemPermission=NEW_PERM_LEVEL})):console.warn("CRABS_Permission_Select not found in DOM")}drawPermission(){let output="",SELECTED=Player.ItemPermission;for(const NUMBER of[0,1,2,3,4,5]){const PERMISISON_TEXT=TextGetInScope("Screens/Character/InformationSheet/Text_InformationSheet.csv","PermissionLevel"+NUMBER.toString());output+=`<option${NUMBER===SELECTED?" selected":""} value="${NUMBER}">${PERMISISON_TEXT}</option>`}return output}drawBanner(name,version,extradata){if(!ChatRoomData||0===Object.keys(ChatRoomData).length)return void console.log("CRABS: ChatRoomData wasn't populated");let templatevars={Logo:this.printimage("logo",void 0,"CRABS_logo"),Name:name,Version:version,LabelColor:`${Player.LabelColor}`,PermissionOptions:this.drawPermission(),RoomName:ChatRoomData.Name},wrappervars={Close:this.printimage("close",void 0,"CRABS_close",void 0,["elementid","CRABS_Banner"])};extradata&&Object.assign(templatevars,extradata),this.sendoutput(this.template('<table class="CRABS_banner">\n    <tbody>\n        <tr>\n            <td class="CRABS_banner_logo_container">{{Logo}}</td>\n            <td>{{Name}}</td>\n            <td class="CRABS_banner_version_container">{{Version}}</td>\n        </tr>\n        <tr>\n            <td colspan=3>\n                <label for="CRABS_permission_select" class="CRABS_dropdown_label">Item Permission:</label><br>\n                <select id="CRABS_permission_select" class="CRABS_dropdown" style="color: {{LabelColor}};">\n                    {{PermissionOptions}}\n                </select>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=3>Room: {{RoomName}}</td>\n        </tr>\n        <tr>\n            <td colspan=3>{{RosterCounters}}<hr></td>\n        </tr>\n        <tr>\n            <td colspan=3>Use <a class="CRABS_banner_rosterlink" data-action="print-roster">/roster</a> to see the full output</td>\n        </tr>\n    </tbody>\n</table>\n',templatevars,!0,wrappervars),"CRABS_Banner"),this.attachPermissionChangeHandler(),this.attachEvent("CRABS_banner_rosterlink","fakePlayerCommand")}}(CRABS),WHISPERPLUS=new class extends CRABS$1{constructor(CRABS){super(CRABS)}ChatRoomSendWhisperRanged(target,msg){if(""==msg)return!1;const TARGETMEMEBER="object"==typeof target?target:ChatRoomCharacter.find((C=>C.MemberNumber===parseInt(target)));if(!TARGETMEMEBER)return ChatRoomSendLocalChatRoomSendLocal(`${TextGet("CommandNoWhisperTarget")} ${target}.`,3e4),!1;if(TARGETMEMEBER.MemberNumber===Player.MemberNumber){const SELFMESSAGE=`<span style="color:#989898">${this.printimage("thought")} Note to </span><span style="color:${Player.LabelColor}">self</span><span style="color:#989898">: ${msg}</span>`;return ChatRoomSendLocal(SELFMESSAGE),!1}if(msg=(msg=msg.replace(/\(/g,"❪")).replace(/\)/g,"❫"),target.MemberNumber!=Player.MemberNumber){ChatRoomMapViewIsActive()&&!ChatRoomMapViewCharacterOnWhisperRange(target)&&"("!=msg[0]&&(msg=`(${msg})`);let data=ChatRoomGenerateChatRoomChatMessage("Whisper",`+: ${msg}`);data.Target=target.MemberNumber;const serverData=Object.assign(Object.assign({},data),{Type:"Whisper"});return ServerSend("ChatRoomChat",serverData),data.Sender=Player.MemberNumber,ChatRoomMessage(data),!0}return addChatMessage(msg),!1}sendWhisper(memberNumber){for(const command of Commands)"whisper+"==command.Tag&&window.CommandSet(command.Tag+" "+memberNumber)}whisperplus(args,command){const MEMBERNUMBER=parseInt(args.slice(0,args.indexOf(" "))),MESSAGE=command.substring(command.indexOf(" ")+MEMBERNUMBER.toString().length+2);if(Number.isNaN(MEMBERNUMBER))return ChatRoomSendLocal("Member number is invalid.",3e4),1;if(""==MESSAGE)return ChatRoomSendLocal("Message was blank",3e4),1;const TARGET=ChatRoomCharacter.find((C=>C.MemberNumber==MEMBERNUMBER));return this.ChatRoomSendWhisperRanged(TARGET||MEMBERNUMBER,MESSAGE),0}}(CRABS),ROSTER=new class extends CRABS$1{constructor(CRABS){super(CRABS),this.onlineFriends=void 0,this.lastSentTime=0,this.loadFriendList()}initScrollingOverflow(containerSelector=".CRABS_overflow-wrapper"){document.querySelectorAll(containerSelector).forEach((wrapper=>{const scroller=wrapper.querySelector(".CRABS_overflow-scroll");scroller&&(wrapper.classList.remove("scrolling"),scroller.style.removeProperty("--scroll-distance"),requestAnimationFrame((()=>{const scrollWidth=scroller.scrollWidth,wrapperWidth=wrapper.offsetWidth;if(scrollWidth>wrapperWidth){const scrollAmount=scrollWidth-wrapperWidth;scroller.style.setProperty("--scroll-distance",`-${scrollAmount}px`),wrapper.classList.add("scrolling")}})))}))}setStatusIcons(player){const PREFIXES=["Blind","Gag","Deaf"],EFFECTS=CharacterGetEffects(player),EFFECT_LISTS={Blind:{BlindLight:1,BlindNormal:2,BlindHeavy:3,BlindTotal:4},Gag:{GagVeryLight:1,GagEasy:1,GagLight:1,GagNormal:2,GagMedium:2,GagHeavy:3,GagVeryHeavy:3,GagTotal:4,GagTotal2:4,GagTotal3:4,GagTotal4:4},Deaf:{DeafLight:1,DeafNormal:2,DeafHeavy:3,DeafTotal:4}};let icons={Blind:"",Gag:"",Deaf:""};const updateIcon=(prefix,effect)=>{const effectName=effect.charAt(0).toLowerCase()+effect.slice(1),effectList=EFFECT_LISTS[prefix];if(effect in effectList){const effectValue=effectList[effect];effectValue>(icons[prefix]?parseInt(icons[prefix].split(": ")[1]):0)&&(icons[prefix]=this.printimage(effectName,`${prefix}: ${effectValue}`,"CRABS_status-icon","--brightness: brightness(2.5);\n            background: linear-gradient(to right, #202020 10%, var(--border-color, white) 80%, transparent 100%);\n            "))}};for(let effect of EFFECTS)for(let prefix of PREFIXES)effect.startsWith(prefix)&&updateIcon(prefix,effect);return icons.Blind=icons.Blind||this.printimage("blindNone",void 0,"CRABS_status-icon"),icons.Gag=icons.Gag||this.printimage("gagNone",void 0,"CRABS_status-icon"),icons.Deaf=icons.Deaf||this.printimage("deafNone",void 0,"CRABS_status-icon"),`${icons.Gag} ${icons.Blind} ${icons.Deaf}`}buildCard(player,badge,player_icons){var _a;let templatevars={PlayerNumber:`${player.MemberNumber}`,Badge:badge,LabelColorBorder:`${this.convertColor(null!==(_a=player.LabelColor)&&void 0!==_a?_a:"#FFFFFF",.5)}`,LabelColor:`${player.LabelColor||"#FFFFFF"}`,PlayerName:CharacterNickname(player).normalize("NFKC"),PlayerIcons:player_icons,StatusIcons:`${this.setStatusIcons(player)}`};return this.template('<table class="CRABS_card" style="--border-color: {{LabelColorBorder}}">\n    <tbody>\n        <tr>\n            <td width=37px rowspan="2">\n                <a \n                    class="CRABS_player-badge"\n                    data-player-number="{{PlayerNumber}}"\n                >{{Badge}}</a>\n            </td>\n            <td style="max-width: 400px; width=400px;" colspan="2">\n                <div class="CRABS_overflow-wrapper">\n                    <div class="CRABS_player-id" \n                         style="color:{{LabelColor}};"\n                         data-player-number="{{PlayerNumber}}"\n                    >\n                        <span class="CRABS_overflow-scroll">\n                            {{PlayerName}}({{PlayerNumber}})\n                        </span>\n                    </div>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td class="CRABS_player-icons">{{PlayerIcons}}</td>\n            <td class="CRABS_status-frame" style="--border-color: {{LabelColorBorder}};">\n                {{StatusIcons}}\n            </td>\n        </tr>\n    </tbody>\n</table>\n',templatevars,!1)}loadFriendList(){this.crabs.hookFunction("FriendListLoadFriendList",0,((args,next)=>{const[DATA]=args;return this.onlineFriends=DATA.length,this.lastSentTime=Date.now(),next(args)}))}canSendServerRequest(){const now=Date.now();return now-this.lastSentTime>=6e5&&(this.lastSentTime=now,!0)}getOnlineFriendCount(){return __awaiter(this,void 0,void 0,(function*(){return this.canSendServerRequest()&&(yield ServerSend("AccountQuery",{Query:"OnlineFriends"})),new Promise((resolve=>{const CHECKONLINEFRIENDS=()=>{void 0!==this.onlineFriends?resolve(this.onlineFriends):setTimeout(CHECKONLINEFRIENDS,100)};CHECKONLINEFRIENDS()}))}))}setbadge(player){let badge=this.printimage("player","Guest","CRABS_badge");return badge=ChatRoomData.Whitelist.includes(player.MemberNumber)?this.printimage("vip","VIP","CRABS_badge"):badge,badge=ChatRoomData.Admin.includes(player.MemberNumber)?this.printimage("admin","Admin","CRABS_badge"):badge,badge}setIcons(player){var _a,_b,_c;let player_icons="";return Player.OwnerNumber()==player.MemberNumber?player_icons+=this.printimage("owner","Your Owner")+" ":Player.IsInFamilyOfMemberNumber(null!==(_a=player.MemberNumber)&&void 0!==_a?_a:-1)&&(Player.IsOwnedByPlayer(null!==(_b=player.MemberNumber)&&void 0!==_b?_b:-1)?player_icons+=this.printimage("sub","Submissive")+" ":player_icons+=this.printimage("trial","Trial")+" "),Player.GetLoversNumbers().includes(null!==(_c=player.MemberNumber)&&void 0!==_c?_c:-1)?player_icons+=this.printimage("lover","Lover")+" ":this.detectMod("BCTweaks")&&Player.BCT.bctSettings.bestFriendsList.includes(player.MemberNumber)?player_icons+=this.printimage("bestfriend","Best Friend")+" ":Player.FriendList.includes(player.MemberNumber)&&(player_icons+=this.printimage("friend","Friend")+" "),Player.WhiteList.includes(player.MemberNumber)?player_icons+=this.printimage("whitelist","Whitelist")+" ":Player.BlackList.includes(player.MemberNumber)&&(player_icons+=this.printimage("blacklist","Blacklist")+" "),Player.GhostList.includes(player.MemberNumber)&&(player_icons+=this.printimage("ghost","Ghosted")+" "),player_icons}buildroster(args,wrapper=!0){var _a,_b;const SPLITARGS=args.split(" ");let player,MemberNumber,templatevars,me_output_html="",admin_output_html="",vip_output_html="",player_output_html="",admin_count=0,badge="",player_icons="",showme=!0,showadmins=!0,showvip=!0,showplayers=!0,output_html="";for(let person in ChatRoomData.Character)if(MemberNumber=ChatRoomData.Character[person].MemberNumber,player=ChatRoomCharacter.find((C=>C.MemberNumber==MemberNumber)),player)if(badge=this.setbadge(player),player_icons=this.setIcons(player),player.IsPlayer()&&(player_icons=this.printimage("you","You")+" "+player_icons,me_output_html=this.buildCard(player,badge,player_icons)),ChatRoomData.Admin.includes(player.MemberNumber)){if(admin_count++,!player.IsPlayer()){admin_output_html+=this.buildCard(player,badge,player_icons);continue}}else{if(ChatRoomData.Whitelist.includes(player.MemberNumber)&&!player.IsPlayer()){vip_output_html+=this.buildCard(player,badge,player_icons);continue}player.IsPlayer()||(player_output_html+=this.buildCard(player,badge,player_icons))}else player_output_html+="❓ <span style='color:#FF0000'>[Unknown Person]</span>\n";if(SPLITARGS.some((item=>"count"===item.toLowerCase()))&&(showme=!1,showadmins=!1,showvip=!1,showplayers=!1),SPLITARGS.some((item=>"admins"===item.toLowerCase()))&&(showme=!1,showvip=!1,showplayers=!1),SPLITARGS.some((item=>"vips"===item.toLowerCase()))&&(showme=!1,showadmins=!1,showplayers=!1),templatevars={adminIcon:`${this.printimage("admin","Admins","CRABS_header_icons")}`,adminsInRoom:`${admin_count}`,totalAdmins:`${ChatRoomData.Admin.length}`,playerIcon:`${this.printimage("player","Players","CRABS_header_icons")}`,playersInRoom:`${ChatRoomCharacter.length}`,totalPlayers:`${ChatRoomData.Limit}`,friendIcon:`${this.printimage("friend","Friends","CRABS_header_icons")}`,friendsOnline:null!==(_b=null===(_a=this.onlineFriends)||void 0===_a?void 0:_a.toString())&&void 0!==_b?_b:"...",totalFriends:`${Player.FriendNames.size}`,connectedIcon:`${this.printimage("connected","Online Accounts","CRABS_header_icons")}`,onlinePlayers:`${CurrentOnlinePlayers}`},ChatRoomMapViewIsActive()){let displaykeys="";const KEYS={keyBronze:Player.MapData.PrivateState.HasKeyBronze,keySilver:Player.MapData.PrivateState.HasKeySilver,keyGold:Player.MapData.PrivateState.HasKeyGold};for(const[KEY,VALUE]of Object.entries(KEYS))displaykeys+=this.printimage(VALUE?KEY:"keyNull");templatevars.online_player_border="2px",templatevars.collectedKeys=`<td style="border-right: 0px">${displaykeys}</td>`,templatevars.columncount="5"}else templatevars.online_players_border="0px",templatevars.collectedKeys="",templatevars.columncount="4";let output_rows="";output_rows=showme?output_rows+me_output_html:output_rows,output_rows=showadmins?output_rows+admin_output_html:output_rows,output_rows=showvip?output_rows+vip_output_html:output_rows,output_rows=showplayers?output_rows+player_output_html:output_rows,templatevars.playerRows=output_rows;let wrappervars={Close:this.printimage("close",void 0,"CRABS_close",void 0,["elementid","CRABS_Roster"])};return output_html=this.template('<div class="CRABS_roster_center_table">\n    <div class="CRABS_roster_table_shrink">\n        <table class="CRABS_room-status">\n            <tbody>\n                <tr>\n                    <td>\n                        <div class="CRABS_roster_header_align">\n                            {{adminIcon}}{{adminsInRoom}}/{{totalAdmins}}\n                        </div>\n                    </td>\n                    <td>\n                        <div class="CRABS_roster_header_align">\n                            {{playerIcon}}{{playersInRoom}}/{{totalPlayers}}\n                        </div>\n                    </td>\n                    <td>\n                        <div class="CRABS_roster_header_align">\n                            {{friendIcon}}{{friendsOnline}}/{{totalFriends}}\n                        </div>\n                    </td>\n                    <td style="border-right:{{online_players_border}}">\n                        <div class="CRABS_roster_header_align">\n                            {{connectedIcon}}{{onlinePlayers}}\n                        </div>\n                    </td>\n                    {{collectedKeys}}\n                </tr>\n            </tbody>\n        </table>\n        <div class="CRABS_card-container">\n            {{playerRows}}\n        </div>\n    </div>\n</div>\n',templatevars,wrapper,wrappervars),output_html}}(CRABS),HELP=new class extends CRABS$1{showHelp(){let output=`<table style="width: 100%"><tr><td>\n            <span style=" text-shadow: 0px 0px 3px #000000; white-space: normal;">\n            <hr>\n            ${this.printimage("logo",void 0,"CRABS_logo")}</br>\n            CRABS ${VERSION} help sheet</br>\n            /roster [optional argument] </br>\n            This command lists the number of admins and players\n            in a room and gives you some information about them </br>\n            \n            <br>\n            /roster Arguments: </br>\n            help - show this menu </br>\n            count - show only the player count </br>\n            admins - show only a list of admins and the counts </br>\n            vips - show only room whitelisted and the counts </br>\n            banner - draws the banner again </br>\n            version - shows the version of CRABS </br>\n\n            </br>\n            /whisper+ [player number] </br>\n            /w+ [player number] </br>\n            Command that lets you whisper at range on maps, \n            activated automatically by clicking the player\n            name in the roster. </br></br>\n\n            /dropkeys [gold silver bronze / all] </br>\n            Command that lets you drop your keys, you can \n            supply one or more key colors, or all to drop \n            all keys. </br>\n\n            </br>\n            Badges:\n            <hr>\n            ${this.printimage("admin")} = Person is Admin</br>\n            ${this.printimage("vip")} = Person is whitelisted in the room </br>\n            ${this.printimage("player")} = Person is a normal user </br>\n\n            </br>\n            Icons:\n            <hr>\n            ${this.printimage("you")} = Person is you </br>\n            ${this.printimage("owner")} = Person is your owner </br>\n            ${this.printimage("sub")} = Person is your submissive </br>\n            ${this.printimage("trial")} = Person is on trial with you </br>\n            ${this.printimage("lover")} = Person is your lover </br>`;this.detectMod("BCTweaks")&&(output+=`${this.printimage("bestfriend")} = Person is a best friend </br>`),output+=`${this.printimage("friend")} = Person is a friend </br>\n            ${this.printimage("whitelist")} = You have this person whitelisted </br>\n            ${this.printimage("blacklist")} = You have this person blacklisted </br>\n            ${this.printimage("ghost")} = You have ghosted this person </br>\n\n            </br>\n            Status Icons:\n            <hr>\n            There are 3 icons on the right side of each player card.\n            They indicate if the player is gagged, blind, or deaf \n            and will light up to show this stats.</br>\n\n            </br>\n            Keys:\n            <hr>\n            When on a map, 3 key icons in the upper right corner of\n            the roster will light up as you collect the different keys. </br>\n\n            </br>\n            Actions:\n            <hr>\n            Click Badge - If you click the badge for a player it will \n            be as if you clicked them to interact. It shows the focus \n            screen.</br></br>\n            Click name - If you click the name/number of a player it \n            will activate whisper+ and let you whisper them without \n            range constraints. </br>\n            </span>\n            </td>\n            </tr>\n            </table>`;let templatevars={HelpOutput:output},wrappervars={Close:this.printimage("close",void 0,"CRABS_close",void 0,["elementid","CRABS_Help"])};return this.template("    {{HelpOutput}}\n",templatevars,!0,wrappervars)}}(CRABS);function drawbanner(){if(null===Player.LastChatRoom)return!1;let extradata={RosterCounters:ROSTER.buildroster("count",!1)};BANNER.drawBanner(NAME,VERSION,extradata)}function commandRedirect(command,args){for(const[_,COMMAND]of Commands.entries())if(COMMAND.Tag===command){COMMAND.Action(args);break}}window.sendWhisper=WHISPERPLUS.sendWhisper,window.PlayerFocus=ROSTER.showPlayerFocus,window.fakePlayerCommand=ROSTER.fakePlayerCommand,window.crabsCloseItem=ROSTER.closeElement.bind(ROSTER),window.crabsHelp=HELP.showHelp.bind(HELP),console.log(`CRABS v${VERSION} Loaded`),ChatRoomRegisterMessageHandler({Description:"Send room stats on entry.",Priority:0,Callback:data=>("Action"===data.Type&&"ServerEnter"===data.Content&&data.Sender===Player.MemberNumber&&setTimeout((()=>{ChatRoomData&&drawbanner()}),3600),!1)}),CommandCombine([{Tag:"whisper+",Description:"Enables the /whisper+ command that does global whisper in a map room",Action:(args,command)=>{WHISPERPLUS.whisperplus(args,command)}}]),CommandCombine([{Tag:"w+",Description:"Enables the /w+ command that does global whisper in a map room",Action:(args,command)=>{WHISPERPLUS.whisperplus(args,command)}}]),CommandCombine([{Tag:"crabs",Description:"Show the player count, helpful in maps.",Action:args=>{commandRedirect("roster",args)}}]),CommandCombine([{Tag:"roster",Description:"Show the player count, helpful in maps.",Action:args=>{(function(args){const SPLITARGS=args.split(" ");if("help"==SPLITARGS[0].toLowerCase()){HELP.sendoutput(HELP.showHelp(),"CRABS_Help");const HELPBUTTON=document.getElementById("CRABS_Help_Icon");return HELPBUTTON&&(HELPBUTTON.style.display="none"),!1}return"version"==SPLITARGS[0].toLowerCase()?(ChatRoomSendLocal(`${NAME} (${NICKNAME}) <br>Version: ${VERSION}`),!1):"banner"!=SPLITARGS[0].toLowerCase()||(drawbanner(),!1)})(args)&&ROSTER.sendoutput(ROSTER.buildroster(args),"CRABS_Roster"),ROSTER.initScrollingOverflow();document.querySelectorAll("div.ChatMessageNonDialogue").forEach((element=>{element.style.overflow="visible"})),ROSTER.attachEvent("CRABS_player-badge","PlayerFocus","playerNumber"),ROSTER.attachEvent("CRABS_player-id","sendWhisper","playerNumber")}}]),CommandCombine([{Tag:"players",Description:"Deprecated: Show the player count, helpful in maps.",Action:args=>{commandRedirect("roster",args)}}]),CommandCombine([{Tag:"dropkeys",Description:"Drops the specified keys: gold, silver, or bronze. You can also use all.",Action:args=>{const splitArgs=args.toLowerCase().split(" ");if(splitArgs.length<1)ChatRoomSendLocal("You must supply which key to drop, or 'all' to drop them all.");else if(ChatRoomMapViewIsActive())for(let i=0;i<splitArgs.length;i++)"bronze"!=splitArgs[i]&&"all"!=splitArgs[i]||Player.MapData.PrivateState.HasKeyBronze&&(Player.MapData.PrivateState.HasKeyBronze=!1,ChatRoomSendLocal("Bronze key dropped.")),"silver"!=splitArgs[i]&&"all"!=splitArgs[i]||Player.MapData.PrivateState.HasKeySilver&&(Player.MapData.PrivateState.HasKeySilver=!1,ChatRoomSendLocal("Silver key dropped.")),"gold"!=splitArgs[i]&&"all"!=splitArgs[i]||Player.MapData.PrivateState.HasKeyGold&&(Player.MapData.PrivateState.HasKeyGold=!1,ChatRoomSendLocal("Gold key dropped.")),"bronze"!=splitArgs[i]&&"silver"!=splitArgs[i]&&"gold"!=splitArgs[i]&&"all"!=splitArgs[i]&&ChatRoomSendLocal(`Argument '${splitArgs[i]}', was not understood.`);else ChatRoomSendLocal("Key only work on a map...")}}])}();
//# sourceMappingURL=bundle.js.map
