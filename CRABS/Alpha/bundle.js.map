{"version":3,"file":"bundle.js","sources":["../../../Dev/node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../../../Dev/node_modules/tslib/tslib.es6.js","../../../Dev/node_modules/dompurify/dist/purify.es.mjs","../../../Dev/node_modules/style-inject/dist/style-inject.es.js","../../../../Dev/src/base.ts","../../../../Dev/src/modules/roster.ts","../../../../Dev/src/modules/whisperplus.ts","../../../../Dev/src/main.ts","../../../../Dev/src/modules/banner.ts","../../../../Dev/src/modules/help.ts","../../../../Dev/src/modules/dom.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.2.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const o=\"1.2.0\";function e(o){alert(\"Mod ERROR:\\n\"+o);const e=new Error(o);throw console.error(e),e}const t=new TextEncoder;function n(o){return!!o&&\"object\"==typeof o&&!Array.isArray(o)}function r(o){const e=new Set;return o.filter((o=>!e.has(o)&&e.add(o)))}const i=new Map,a=new Set;function c(o){a.has(o)||(a.add(o),console.warn(o))}function s(o){const e=[],t=new Map,n=new Set;for(const r of f.values()){const i=r.patching.get(o.name);if(i){e.push(...i.hooks);for(const[e,a]of i.patches.entries())t.has(e)&&t.get(e)!==a&&c(`ModSDK: Mod '${r.name}' is patching function ${o.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${e}\\nPatch1:\\n${t.get(e)||\"\"}\\nPatch2:\\n${a}`),t.set(e,a),n.add(r.name)}}e.sort(((o,e)=>e.priority-o.priority));const r=function(o,e){if(0===e.size)return o;let t=o.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of e.entries())t.includes(n)||c(`ModSDK: Patching ${o.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(o.original,t);let i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,o.name,n),c=r.apply(this,e);return null==a||a(),c};for(let t=e.length-1;t>=0;t--){const n=e[t],r=i;i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,o.name,n.mod),c=n.hook.apply(this,[e,o=>{if(1!==arguments.length||!Array.isArray(e))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof o}`);return r.call(this,o)}]);return null==a||a(),c}}return{hooks:e,patches:t,patchesSources:n,enter:i,final:r}}function l(o,e=!1){let r=i.get(o);if(r)e&&(r.precomputed=s(r));else{let e=window;const a=o.split(\".\");for(let t=0;t<a.length-1;t++)if(e=e[a[t]],!n(e))throw new Error(`ModSDK: Function ${o} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const c=e[a[a.length-1]];if(\"function\"!=typeof c)throw new Error(`ModSDK: Function ${o} to be patched not found`);const l=function(o){let e=-1;for(const n of t.encode(o)){let o=255&(e^n);for(let e=0;e<8;e++)o=1&o?-306674912^o>>>1:o>>>1;e=e>>>8^o}return((-1^e)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(c.toString().replaceAll(\"\\r\\n\",\"\\n\")),d={name:o,original:c,originalHash:l};r=Object.assign(Object.assign({},d),{precomputed:s(d),router:()=>{},context:e,contextProperty:a[a.length-1]}),r.router=function(o){return function(...e){return o.precomputed.enter.apply(this,[e])}}(r),i.set(o,r),e[r.contextProperty]=r.router}return r}function d(){for(const o of i.values())o.precomputed=s(o)}function p(){const o=new Map;for(const[e,t]of i)o.set(e,{name:e,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((o=>o.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return o}const f=new Map;function u(o){f.get(o.name)!==o&&e(`Failed to unload mod '${o.name}': Not registered`),f.delete(o.name),o.loaded=!1,d()}function g(o,t){o&&\"object\"==typeof o||e(\"Failed to register mod: Expected info object, got \"+typeof o),\"string\"==typeof o.name&&o.name||e(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof o.name);let r=`'${o.name}'`;\"string\"==typeof o.fullName&&o.fullName||e(`Failed to register mod ${r}: Expected fullName to be non-empty string, got ${typeof o.fullName}`),r=`'${o.fullName} (${o.name})'`,\"string\"!=typeof o.version&&e(`Failed to register mod ${r}: Expected version to be string, got ${typeof o.version}`),o.repository||(o.repository=void 0),void 0!==o.repository&&\"string\"!=typeof o.repository&&e(`Failed to register mod ${r}: Expected repository to be undefined or string, got ${typeof o.version}`),null==t&&(t={}),t&&\"object\"==typeof t||e(`Failed to register mod ${r}: Expected options to be undefined or object, got ${typeof t}`);const i=!0===t.allowReplace,a=f.get(o.name);a&&(a.allowReplace&&i||e(`Refusing to load mod ${r}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(a));const c=o=>{let e=g.patching.get(o.name);return e||(e={hooks:[],patches:new Map},g.patching.set(o.name,e)),e},s=(o,t)=>(...n)=>{var i,a;const c=null===(a=(i=m.errorReporterHooks).apiEndpointEnter)||void 0===a?void 0:a.call(i,o,g.name);g.loaded||e(`Mod ${r} attempted to call SDK function after being unloaded`);const s=t(...n);return null==c||c(),s},p={unload:s(\"unload\",(()=>u(g))),hookFunction:s(\"hookFunction\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);\"number\"!=typeof t&&e(`Mod ${r} failed to hook function '${o}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&e(`Mod ${r} failed to hook function '${o}': Expected hook function, got ${typeof n}`);const s={mod:g.name,priority:t,hook:n};return a.hooks.push(s),d(),()=>{const o=a.hooks.indexOf(s);o>=0&&(a.hooks.splice(o,1),d())}})),patchFunction:s(\"patchFunction\",((o,t)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);n(t)||e(`Mod ${r} failed to patch function '${o}': Expected patches object, got ${typeof t}`);for(const[n,i]of Object.entries(t))\"string\"==typeof i?a.patches.set(n,i):null===i?a.patches.delete(n):e(`Mod ${r} failed to patch function '${o}': Invalid format of patch '${n}'`);d()})),removePatches:s(\"removePatches\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const t=l(o);c(t).patches.clear(),d()})),callOriginal:s(\"callOriginal\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to call a function: Expected function name string, got ${typeof o}`);const i=l(o);return Array.isArray(t)||e(`Mod ${r} failed to call a function: Expected args array, got ${typeof t}`),i.original.apply(null!=n?n:globalThis,t)})),getOriginalHash:s(\"getOriginalHash\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to get hash: Expected function name string, got ${typeof o}`);return l(o).originalHash}))},g={name:o.name,fullName:o.fullName,version:o.version,repository:o.repository,allowReplace:i,api:p,loaded:!0,patching:new Map};return f.set(o.name,g),Object.freeze(p)}function h(){const o=[];for(const e of f.values())o.push({name:e.name,fullName:e.fullName,version:e.version,repository:e.repository});return o}let m;const y=void 0===window.bcModSdk?window.bcModSdk=function(){const e={version:o,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:p,errorReporterHooks:Object.seal({apiEndpointEnter:null,hookEnter:null,hookChainExit:null})};return m=e,Object.freeze(e)}():(n(window.bcModSdk)||e(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&e(`Failed to init Mod SDK: Different version already loaded ('1.2.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==o&&alert(`Mod SDK warning: Loading different but compatible versions ('1.2.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk);return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","/*! @license DOMPurify 3.2.5 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.5/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.5';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import bcModSdk, { ModSDKModAPI, ModSDKModInfo } from \"bondage-club-mod-sdk\";\nimport DOMPurify from \"dompurify\";\nimport \"./templates/base.css\";\nimport wrappertemplate from \"./templates/wrapper.html\";\nexport type TemplateValue = string | { text: string };\n\nexport default class CRABS {\n  declare crabs: ModSDKModAPI;\n\n  // an dictionary containing all the icons that CRABS uses\n  protected readonly ICONS: Record<string, string> = {\n    // logo\n    logo: \"https://sin-1337.github.io/CRABS/CRABS_Logo.png\",\n\n    // error icon\n    error: \"https://sin-1337.github.io/CRABS/error.svg\",\n\n    // badges\n    admin: \"https://sin-1337.github.io/CRABS/icons/admin.svg\",\n    vip: \"https://sin-1337.github.io/CRABS/icons/vip.svg\",\n    player: \"https://sin-1337.github.io/CRABS/icons/player.svg\",\n\n    // icons\n    you: \"https://sin-1337.github.io/CRABS/icons/you.svg\",\n    owner: \"https://sin-1337.github.io/CRABS/icons/owner.svg\",\n    sub: \"https://sin-1337.github.io/CRABS/icons/sub.svg\",\n    trial: \"https://sin-1337.github.io/CRABS/icons/trial.svg\",\n    lover: \"https://sin-1337.github.io/CRABS/icons/lover.svg\",\n    bestfriend: \"https://sin-1337.github.io/CRABS/icons/bestfriend.svg\",\n    friend: \"https://sin-1337.github.io/CRABS/icons/friends.svg\",\n    whitelist: \"https://sin-1337.github.io/CRABS/icons/whitelist.svg\",\n    blacklist: \"https://sin-1337.github.io/CRABS/icons/blacklist.svg\",\n    ghost: \"https://sin-1337.github.io/CRABS/icons/ghost.svg\",\n    thought: \"https://sin-1337.github.io/CRABS/icons/thought.svg\",\n\n    // globe icon for all BC players\n    connected: \"https://sin-1337.github.io/CRABS/icons/connected.svg\",\n\n    //map keys\n    keyGold: \"https://sin-1337.github.io/CRABS/icons/keyGold.png\",\n    keySilver: \"https://sin-1337.github.io/CRABS/icons/keySilver.png\",\n    keyBronze: \"https://sin-1337.github.io/CRABS/icons/keyBronze.png\",\n    keyNull: \"https://sin-1337.github.io/CRABS/icons/keyNull.svg\",\n\n    //BC Icons:\n    blindNone: \"https://sin-1337.github.io/CRABS/icons/blindNone.svg\",\n    blindLight:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/BlindLight.png\",\n    blindNormal:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/BlindNormal.png\",\n    blindHeavy:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/BlindHeavy.png\",\n    blindTotal:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/BlindHeavy.png\",\n\n    deafNone: \"https://sin-1337.github.io/CRABS/icons/deafNone.svg\",\n    deafLight:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/DeafLight.png\",\n    deafNormal:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/DeafNormal.png\",\n    deafHeavy:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/DeafHeavy.png\",\n    deafTotal:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/DeafHeavy.png\",\n\n    gagNone: \"https://sin-1337.github.io/CRABS/icons/gagNone.svg\",\n    gagVeryLight:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagLight.png\",\n    gagEasy:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagLight.png\",\n    gagLight:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagLight.png\",\n    gagNormal:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagNormal.png\",\n    gagMedium:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagNormal.png\",\n    gagHeavy:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagHeavy.png\",\n    gagVeryHeavy:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagHeavy.png\",\n    gagTotal:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagTotal.png\",\n    gagTotal2:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagTotal.png\",\n    gagTotal3:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagTotal.png\",\n    gagTotal4:\n      \"https://www.bondageprojects.elementfx.com/R115/BondageClub/Icons/Previews/GagTotal.png\",\n  };\n\n  constructor(CRABS: ModSDKModAPI) {\n    this.crabs = CRABS;\n  }\n\n  /*\n   * Takes a member number and opens that player's  \"focus\" screen.\n   * This functions is setup up to be exposed to the global DOM\n   *\n   * @param MemberNumber - A number for the player in question\n   * @return void\n   */\n  public static showPlayerFocus(MemberNumber: number): void {\n    // Check if the person is still in the room\n    const PLAYER = ChatRoomCharacter.find(\n      (C) => C.MemberNumber == MemberNumber\n    );\n    if (PLAYER) {\n      ChatRoomStatusUpdate(\"Preference\");\n      ChatRoomFocusCharacter(PLAYER);\n    } else {\n      ChatRoomSendLocal(\"This person is no longer in the room.\");\n    }\n  }\n\n  /*\n   * Takes a string target mod name and returns a true if found\n   *\n   * @param targetmod - string name of the mod\n   * @return boolean true if found, false if not\n   */\n  protected detectMod(targetmod: string): boolean {\n    let modlist = bcModSdk.getModsInfo();\n    return modlist.filter((x) => x.name == targetmod).length > 0;\n  }\n\n  /*\n   * Prints HTMLElement objects into the DOM (Chat Window)\n   * and scroll to bottom of chat window\n   *\n   * @param output: (HTMLElement) object to print\n   */\n  public sendoutput(output: string, elementId?: string): void {\n    const OUTPUT = document.createElement(\"template\");\n\n    const CLEAN_HTML = DOMPurify.sanitize(output, {\n      USE_PROFILES: { html: true }, // Allow full HTML (but safe)\n    });\n\n    OUTPUT.innerHTML = CLEAN_HTML;\n\n    const CHAT = document.getElementById(\"TextAreaChatLog\");\n    if (CHAT) {\n      if (elementId) {\n        const EXISTING = document.getElementById(elementId);\n        if (EXISTING) {\n          EXISTING.remove();\n        }\n\n        const WRAPPER = document.createElement(\"div\");\n        WRAPPER.id = elementId;\n        WRAPPER.appendChild(OUTPUT.content);\n\n        CHAT.appendChild(WRAPPER);\n      } else {\n        CHAT.appendChild(OUTPUT);\n      }\n      ElementScrollToEnd(\"TextAreaChatLog\");\n    } else {\n      console.log(\"CRABS ERROR: Could not find chat element!\");\n    }\n  }\n\n  protected plaintext(value: string): TemplateValue {\n    return { text: value };\n  }\n\n  /*\n   * Takes a template name and outputs the filled out template string\n   *\n   * @param template_name - Name of the HTML file, no extension or path\n   * @param args - A dictionary where the key is a variable name to replace the template\n   * @param wrapper -  A boolean that determines if we draw the wrapper or not\n   * @return A promise that resolves to the final html string\n   */\n  protected template(\n    template: string,\n    args: Record<string, string>,\n    wrapper: boolean = true\n  ): string {\n    let regex: RegExp;\n\n    for (const [key, value] of Object.entries(args)) {\n      regex = new RegExp(`{{${key}}}`, \"g\");\n      template = template.replace(regex, value);\n    }\n\n    if (wrapper) {\n      template = wrappertemplate.replace(\"{{content}}\", template);\n    }\n\n    return template;\n  }\n\n  /*\n   * print the crabs logo\n   * @return html string for the logo\n   */\n  protected printlogo(): string {\n    let html = \"\";\n    html += `<img `;\n    html += `alt='CRABS' `;\n    html += `src='${this.ICONS[\"logo\"]}' `;\n    html += `height=\"100px\" width=\"100px\"`;\n    html += `>`;\n    return html;\n  }\n\n  /*\n   *  print icons\n   *\n   *  @param key - (string) name of the icon you want\n   *  @param tooltip - (string [optional] string tool top\n   *  @param style - (string) [optional] css style\n   *                    to overwrite the default style sheet.\n   *  @return - (string) html representing the icon\n   */\n  protected printicon(\n    key: string,\n    tooltip: string = \"\", // optional tooltip\n    css_class: string = \"CRABS_icon\", //optional class overwrite\n    css_style: string = \"\" // optional, css overwrite\n  ): string {\n    let ICON = this.ICONS[\"error\"]; // fall back if the icon isn't found\n    if (key in this.ICONS) {\n      // test if the key exists\n      ICON = this.ICONS[key];\n    }\n\n    let html = \"\";\n    if (tooltip != \"\") html += `<div class='CRABS_tooltip-wrapper'>`; // skip the tool tip if string wasn't set\n    html += `<img `;\n    html += `alt='${key}' `;\n    html += `src='${ICON}' `;\n    html += `class='${css_class}'`;\n    if (css_style != \"\") html += `style=\"${css_style}\"`;\n    html += `>`;\n    if (tooltip != \"\") html += `<div class='CRABS_tooltip'>${tooltip}</div>`;\n    if (tooltip != \"\") html += `</div>`;\n    return html;\n  }\n\n  /*\n   *  TypeScript: Function to convert hex color to rgba and add transparency\n   *\n   * @param: string hex value of the color\n   * @param: number for transparencey, bigger is more opaque. Optional, default 0\n   *  Alpha range: The alpha value ranges from -1 to 1:\n   *  alpha = 0 means fully opaque (no transparency).\n   *  alpha = -1 means fully transparent (completely invisible).\n   *\n   *  @return: string rgba value with alpha\n   */\n  protected convertColor(hex: string, alpha: number = 0): string {\n    // Remove the hash if it's there\n    hex = hex.replace(/^#/, \"\");\n\n    // Parse the red, green, and blue components\n    let red = parseInt(hex.substr(0, 2), 16);\n    let green = parseInt(hex.substr(2, 2), 16);\n    let blue = parseInt(hex.substr(4, 2), 16);\n\n    // Return the rgba value with alpha transparency\n    return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n  }\n}\n","import CRABS from \"../base\";\nimport { TemplateValue } from \"../base\";\nimport { ModSDKModAPI } from \"bondage-club-mod-sdk\";\nimport \"./templates/roster.css\";\nimport rostertemplate from \"./templates/roster.html\";\nimport rostercardstemplate from \"./templates/roster_cards.html\";\n\nexport class Roster extends CRABS {\n  private onlineFriends: number | undefined = undefined;\n  private lastSentTime: number = 0; // Timestamp for the last ServerSend call\n\n  /*\n   * Constructor\n   *\n   * @param CRABS - (ModSDKModAPI) object containing the modsdkapi\n   */\n  constructor(CRABS: ModSDKModAPI) {\n    super(CRABS);\n    this.loadFriendList();\n  }\n\n  /*\n   * Prints the roster as if the user ran the command\n   * Meant to be attached to the DOM\n   *\n   * @param action - (string) that determines what the roster should print\n   */\n  public static printRoster(action: string = \"all\"): void {\n    for (const [_, COMMAND] of Commands.entries()) {\n      if (COMMAND.Tag === `roster`) {\n        COMMAND.Action(action);\n        break;\n      }\n    }\n  }\n\n  /*\n   * detect overflow in cards and scroll the text\n   *\n   * @param containerSelector - string, containing the css container we want to target\n   */\n  public initScrollingOverflow(\n    containerSelector: string = \".CRABS_overflow-wrapper\"\n  ): void {\n    const wrappers = document.querySelectorAll<HTMLElement>(containerSelector);\n\n    wrappers.forEach((wrapper) => {\n      const scroller = wrapper.querySelector<HTMLElement>(\n        \".CRABS_overflow-scroll\"\n      );\n      if (!scroller) return;\n\n      // Remove previous values\n      wrapper.classList.remove(\"scrolling\");\n      scroller.style.removeProperty(\"--scroll-distance\");\n\n      // Wait for layout\n      requestAnimationFrame(() => {\n        const scrollWidth = scroller.scrollWidth;\n        const wrapperWidth = wrapper.offsetWidth;\n\n        if (scrollWidth > wrapperWidth) {\n          const scrollAmount = scrollWidth - wrapperWidth;\n          scroller.style.setProperty(\"--scroll-distance\", `-${scrollAmount}px`);\n          wrapper.classList.add(\"scrolling\");\n        }\n      });\n    });\n  }\n\n  /*\n   * setStatusIcons determines if a player is Deaf, Blind, or Gagged\n   * and sets icons accordingly\n   *\n   * @param player - PlayerCharater, the player object\n   * @return - string list of icons\n   */\n  private setStatusIcons(player: PlayerCharacter): string {\n    const PREFIXES = [\"Blind\", \"Gag\", \"Deaf\"];\n    const EFFECTS = CharacterGetEffects(player);\n\n    // Effect lists mapping\n    const EFFECT_LISTS: { [key: string]: { [key: string]: number } } = {\n      Blind: {\n        BlindLight: 1,\n        BlindNormal: 2,\n        BlindHeavy: 3,\n        BlindTotal: 4,\n      },\n      Gag: {\n        GagVeryLight: 1,\n        GagEasy: 1,\n        GagLight: 1,\n        GagNormal: 2,\n        GagMedium: 2,\n        GagHeavy: 3,\n        GagVeryHeavy: 3,\n        GagTotal: 4,\n        GagTotal2: 4,\n        GagTotal3: 4,\n        GagTotal4: 4,\n      },\n      Deaf: {\n        DeafLight: 1,\n        DeafNormal: 2,\n        DeafHeavy: 3,\n        DeafTotal: 4,\n      },\n    };\n\n    // Initialize icons as empty strings\n    let icons: { [key: string]: string } = {\n      Blind: \"\",\n      Gag: \"\",\n      Deaf: \"\",\n    };\n\n    // Helper function to determine the maximum value for each prefix and set the corresponding icon\n    const updateIcon = (prefix: string, effect: string): void => {\n      const effectName = effect.charAt(0).toLowerCase() + effect.slice(1);\n      const effectList = EFFECT_LISTS[prefix];\n\n      if (effect in effectList) {\n        const effectValue = effectList[effect];\n        if (\n          effectValue >\n          (icons[prefix] ? parseInt(icons[prefix].split(\": \")[1]) : 0)\n        ) {\n          icons[prefix] = this.printicon(\n            effectName, // which icon do we print\n            `${prefix}: ${effectValue}`, // set a tooltip\n            `CRABS_status-icon`, // set a class\n            `--brightness: brightness(2.5);\n            background: linear-gradient(to right, #202020 10%, var(--border-color, white) 80%, transparent 100%);\n            `, //style overwrite\n          );\n        }\n      }\n    };\n\n    // Process effects\n    for (let effect of EFFECTS) {\n      for (let prefix of PREFIXES) {\n        if (effect.startsWith(prefix)) {\n          updateIcon(prefix, effect);\n        }\n      }\n    }\n\n    // Set default icons if no icon was set\n    icons.Blind = icons.Blind || this.printicon(\n        \"blindNone\", undefined, \"CRABS_status-icon\"\n    );\n    icons.Gag = icons.Gag || this.printicon(\n        \"gagNone\", undefined, \"CRABS_status-icon\"\n    );\n    icons.Deaf = icons.Deaf || this.printicon(\n        \"deafNone\", undefined, \"CRABS_status-icon\"\n    );\n\n    return `${icons.Gag} ${icons.Blind} ${icons.Deaf}`;\n  }\n  /*\n   * builds the cards that get injected into the roster\n   *\n   * @param player -  PlayerCharacter that we are working with\n   * @param badge - string for the badge showing if the player is admin\n   * @param player_icons - string for the different icons relevant to the player\n   * @return - string containing the output html from the template.\n   */\n  private buildCard(\n    player: PlayerCharacter,\n    badge: string,\n    player_icons: string\n  ): string {\n    let templatevars: Record<string, string> = {\n      PlayerNumber: `${player.MemberNumber}`,\n      Badge: badge,\n      LabelColorBorder: `${this.convertColor(\n        player.LabelColor ?? \"#FFFFFF\",\n        0.5\n      )}`,\n      LabelColor: `${player.LabelColor || \"#FFFFFF\"}`,\n      PlayerName: CharacterNickname(player).normalize(\"NFKC\"),\n      PlayerIcons: player_icons,\n      StatusIcons: `${this.setStatusIcons(player)}`,\n    };\n\n    return this.template(rostercardstemplate, templatevars, false);\n  }\n\n  //query the server for friendslist\n  private loadFriendList(): void {\n    this.crabs.hookFunction(\"FriendListLoadFriendList\", 0, (args, next) => {\n      const [DATA]: Array<Record<string, any>> = args;\n      this.onlineFriends = DATA.length;\n      this.lastSentTime = Date.now();\n      return next(args);\n    });\n  }\n\n  // Debounce function to control the timing of ServerSend\n  private canSendServerRequest(): boolean {\n    const now = Date.now();\n    if (now - this.lastSentTime >= 10 * 60 * 1000) {\n      // 10 minutes in milliseconds\n      this.lastSentTime = now; // Update the lastSentTime to the current time\n      return true;\n    }\n    return false;\n  }\n\n  // Function to get the online friend count\n  public async getOnlineFriendCount(): Promise<number> {\n    // Check if it's okay to send the server request\n    if (this.canSendServerRequest()) {\n      // Send server request if it's been more than 2 minutes\n      await ServerSend(\"AccountQuery\", { Query: \"OnlineFriends\" });\n    }\n\n    // Wait for the hook function to finish (assuming `next` ensures it completes)\n    return new Promise<number>((resolve) => {\n      const CHECKONLINEFRIENDS = () => {\n        if (this.onlineFriends !== undefined) {\n          resolve(this.onlineFriends); // Return the online friends count\n        } else {\n          setTimeout(CHECKONLINEFRIENDS, 100); // Check again after 100ms\n        }\n      };\n\n      CHECKONLINEFRIENDS(); // Start the checking process\n    });\n  }\n\n  // determine if player is admin or whitelisted in the room and set their badge icon\n  private setbadge(player: PlayerCharacter): string {\n    let badge = this.printicon(\"player\", \"Guest\", \"CRABS_badge\");\n    badge = ChatRoomData.Whitelist.includes(player.MemberNumber)\n      ? this.printicon(\"vip\", \"VIP\", \"CRABS_badge\")\n      : badge;\n    badge = ChatRoomData.Admin.includes(player.MemberNumber)\n      ? this.printicon(\"admin\", \"Admin\", \"CRABS_badge\")\n      : badge;\n    return badge;\n  }\n\n  /*\n   * Sets the icons relevant to the player\n   *\n   * @param player - PlayerCharacter object\n   * @return - string, html string containing the icons.\n   */\n  private setIcons(player: PlayerCharacter): string {\n    let player_icons = \"\";\n    if (Player.OwnerNumber() == player.MemberNumber) {\n      // person owns you\n      player_icons += this.printicon(\"owner\", \"Your Owner\") + \" \";\n    } else if (Player.IsInFamilyOfMemberNumber(player.MemberNumber ?? -1)) {\n      // if they don't own you but you are in their family, we assume you own them\n      if (Player.IsOwnedByPlayer(player.MemberNumber ?? -1)) {\n        // The person is fully owned if this is true\n        player_icons += this.printicon(\"sub\", \"Submissive\") + \" \";\n      } else {\n        // person is on trial\n        player_icons += this.printicon(\"trial\", \"Trial\") + \" \";\n      }\n    }\n    if (Player.GetLoversNumbers().includes(player.MemberNumber ?? -1)) {\n      // person is a lover\n      player_icons += this.printicon(\"lover\", \"Lover\") + \" \";\n    } else {\n      if (this.detectMod(\"BCTweaks\")) {\n        // BCTweaks mod is found\n        if (\n          Player.BCT.bctSettings.bestFriendsList.includes(player.MemberNumber)\n        ) {\n          //Player is a best friend, skip checking if they are a friend.\n          player_icons += this.printicon(\"bestfriend\", \"Best Friend\") + \" \";\n        } else if (Player.FriendList.includes(player.MemberNumber)) {\n          // Player is not a best friend, but they are a friend\n          player_icons += this.printicon(\"friend\", \"Friend\") + \" \";\n        }\n      } else if (Player.FriendList.includes(player.MemberNumber)) {\n        // person is a friend, and the BCTweaks mod is not found\n        player_icons += this.printicon(\"friend\", \"Friend\") + \" \";\n      }\n    }\n    if (Player.WhiteList.includes(player.MemberNumber)) {\n      // Player is whitelisted\n      player_icons += this.printicon(\"whitelist\", \"Whitelist\") + \" \";\n    } else if (Player.BlackList.includes(player.MemberNumber)) {\n      // Player is blacklisted\n      player_icons += this.printicon(\"blacklist\", \"Blacklist\") + \" \";\n    }\n    if (Player.GhostList.includes(player.MemberNumber)) {\n      // Player is ghosted\n      player_icons += this.printicon(\"ghost\", \"Ghosted\") + \" \";\n    }\n    return player_icons;\n  }\n\n  /*\n   *  prints the roster\n   *\n   *  @param args - string arguments passed from user\n   *  @param wrapper - boolean wrappar, should we draw the wrapper\n   *  @returms - string html output\n   */\n  public buildroster(\n      args: string, \n      wrapper: boolean = true\n  ): string {\n    const SPLITARGS = args.split(\" \");\n\n    let me_output_html: string = \"\" // holds data about user who ran script\n    let admin_output_html: string = \"\" // holds admins\n    let vip_output_html: string = \"\" // holds whitelisted users\n    let player_output_html : string = \"\" // holds normal players\n    let player: PlayerCharacter; // the person we found in the room\n    let admin_count = 0; // number of admins in the room\n    let badge = \"\"; // holds the admin icon if the player is an admin\n    let player_icons = \"\"; // holds the list of player/status icons (string)\n    let MemberNumber: number;\n\n    // filter variables, show or not show certain output\n    let showme = true; // person who ran the script (you)\n    let showadmins = true; // room admins\n    let showvip = true; // room whitelists\n    let showplayers = true; // normal players\n    let templatevars: Record<string, string>;\n    let output_html: string = \"\"\n\n    //get a list of players\n    for (let person in ChatRoomData.Character) {\n      // find member number for current player in list\n      MemberNumber = ChatRoomData.Character[person].MemberNumber;\n\n      // Find player\n      player = ChatRoomCharacter.find(\n        (C: any) => C.MemberNumber == MemberNumber\n      );\n\n      //bail out and return placeholder if player is not available.\n      if (!player) {\n        player_output_html +=\n            \"❓ <span style='color:#FF0000'>[Unknown Person]</span>\\n\";\n        continue;\n      }\n\n      // check if the player is also an admin or vip and add icon with admin given priority\n      badge = this.setbadge(player);\n      player_icons = this.setIcons(player);\n\n      // if the player is me (person who ran the script)\n      if (player.IsPlayer()) {\n        // mark me with a star icon\n        player_icons = this.printicon(\"you\", \"You\") + \" \" + player_icons;\n\n        // format my output and store\n        me_output_html = this.buildCard(player, badge, player_icons);\n      }\n\n      // check if the player is an admin and update the count, also flag the player as admin in the output list.\n      if (ChatRoomData.Admin.includes(player.MemberNumber)) {\n        admin_count++;\n        if (!player.IsPlayer()) {\n          // if the player is not me, output admin and skip rest of loop\n          admin_output_html += this.buildCard(player, badge, player_icons);\n          continue;\n        }\n      } else if (\n        ChatRoomData.Whitelist.includes(player.MemberNumber) &&\n        !player.IsPlayer()\n      ) {\n        // if the player isn't an admin, is the player is white listed?\n        vip_output_html += this.buildCard(player, badge, player_icons);\n        continue;\n      } else if (!player.IsPlayer()) {\n        // player is normal, nonadmin, not whitelist, and not me.\n        player_output_html += this.buildCard(player, badge, player_icons);\n      }\n    }\n\n    // if argument is \"count\", set filter vars and skip loop\n    if (SPLITARGS.some((item: any) => item.toLowerCase() === \"count\")) {\n      showme = false;\n      showadmins = false;\n      showvip = false;\n      showplayers = false;\n    }\n\n    // if argument is admins, set filter vars to only show admins and continue\n    if (SPLITARGS.some((item: any) => item.toLowerCase() === \"admins\")) {\n      showme = false;\n      showvip = false;\n      showplayers = false;\n    }\n\n    // if argument is vips, set filter vars to only show vips (white listed) and continue\n    if (SPLITARGS.some((item: any) => item.toLowerCase() === \"vips\")) {\n      showme = false;\n      showadmins = false;\n      showplayers = false;\n    }\n\n    // build table header\n    templatevars = {\n      adminIcon: `${this.printicon(\"admin\", \"Admins\", \"CRABS_header_icons\")}`,\n      adminsInRoom: `${admin_count}`,\n      totalAdmins: `${ChatRoomData.Admin.length}`,\n      playerIcon: `${this.printicon(\"player\", \"Players\", \"CRABS_header_icons\")}`,\n      playersInRoom: `${ChatRoomCharacter.length}`,\n      totalPlayers: `${ChatRoomData.Limit}`,\n      friendIcon: `${this.printicon(\"friend\", \"Friends\", \"CRABS_header_icons\")}`,\n      friendsOnline: this.onlineFriends?.toString() ?? \"...\",\n      totalFriends: `${Player.FriendNames.size}`,\n      connectedIcon: `${this.printicon(\"connected\", \"Online Accounts\", \"CRABS_header_icons\")}`,\n      onlinePlayers: `${CurrentOnlinePlayers}`,\n    };\n\n    // are we on a map?\n    if (ChatRoomMapViewIsActive()) {\n      let displaykeys = \"\"; // determines how to show keys (css) in the roster\n\n      // build a dictionary of the keys\n      const KEYS = {\n        keyBronze: Player.MapData.PrivateState.HasKeyBronze,\n        keySilver: Player.MapData.PrivateState.HasKeySilver,\n        keyGold: Player.MapData.PrivateState.HasKeyGold,\n      };\n\n      // loop the dictionary and extract the key and name\n      for (const [KEY, VALUE] of Object.entries(KEYS)) {\n        // if key is found, set icon and tool tip\n        displaykeys += this.printicon(VALUE ? KEY : \"keyNull\");\n      }\n\n      // replace the template objects for the values we determined above.\n      templatevars[\"online_player_border\"] = \"2px\";      \n      templatevars[\"collectedKeys\"] = \n          `<td style=\"border-right: 0px\">${displaykeys}</td>`;\n      templatevars[\"columncount\"] = \"5\";\n    } else {\n      templatevars[\"online_players_border\"] = \"0px\"; \n      templatevars[\"collectedKeys\"] = \"\";\n      templatevars[\"columncount\"] = \"4\"; // no keys? colspan is 4\n    }\n\n    // start the tabble\n    let output_rows: string = \"\";\n    // if the filter var resolves to true, add the respective output.\n    output_rows = showme ? output_rows + me_output_html : output_rows;\n    output_rows = showadmins ? output_rows + admin_output_html : output_rows;\n    output_rows = showvip ? output_rows + vip_output_html : output_rows;\n    output_rows = showplayers ? output_rows + player_output_html : output_rows;\n    templatevars[\"playerRows\"] = output_rows;\n\n    // run the template and fill it out\n    output_html = this.template(rostertemplate, templatevars, wrapper);\n    return output_html;\n  }\n}\n","import {ModSDKModAPI} from \"bondage-club-mod-sdk\";\nimport CRABS from \"../base\"\nexport class WhisperPlus extends CRABS {\n\n    constructor(CRABS: ModSDKModAPI) {\n        super(CRABS);\n        window.sendWhisper = WhisperPlus.sendWhisper;\n    } \n\n    // send chat message at range\n    private ChatRoomSendWhisperRanged(target: any, msg: string): boolean {\n        if (msg == \"\") {\n            return false;\n        }\n\n        // First ensure we have a valid target object\n        const TARGETMEMEBER = typeof target === 'object' ? target : ChatRoomCharacter.find(C => C.MemberNumber === parseInt(target));\n        if (!TARGETMEMEBER) {\n            ChatRoomSendLocalChatRoomSendLocal(`${TextGet(\"CommandNoWhisperTarget\")} ${target}.`, 30_000);\n            return false;\n        }\n\n        // Handle self whispers with gray text and memo emoji\n        if (TARGETMEMEBER.MemberNumber === Player.MemberNumber) {\n            const SELFMESSAGE = `<span style=\"color:#989898\">${this.printicon(\"thought\")} Note to </span><span style=\"color:${Player.LabelColor}\">self</span><span style=\"color:#989898\">: ${msg}</span>`;\n            ChatRoomSendLocal(SELFMESSAGE);\n            return false;\n        }\n\n        // Replace normal brackets with fake ones in the message\n        msg = msg.replace(/\\(/g, \"❪\"); //replace the ( for consistency\n        msg = msg.replace(/\\)/g, \"❫\"); // technically only this one is really needed\n\n\n        // check if target and player are the same\n        if (target.MemberNumber == Player.MemberNumber) {\n            addChatMessage(msg);\n        } else {\n            if (ChatRoomMapViewIsActive() && !ChatRoomMapViewCharacterOnWhisperRange(target) && msg[0] != \"(\") {\n                msg = `(${msg})`;\n            }\n\n            // Prepare the message - now with ⤵ instead of :\n            let formattedMsg = `+: ${msg}`;\n            //if (Player.ChatSettings.OOCAutoClose && !msg.endsWith('）')) {\n            //    formattedMsg += '）';\n            //}\n\n            // build data payload\n            let data = ChatRoomGenerateChatRoomChatMessage(\"Whisper\", formattedMsg);\n            /*if (!data) {\n                data = ChatRoomGenerateChatRoomChatMessage(\"Whisper\", formattedMsg);\n            }*/\n\n            // set the whisper target\n            data.Target = target.MemberNumber;\n\n            //send the whisper\n            const serverData = { ...data, Type: \"Whisper\" }\n            ServerSend(\"ChatRoomChat\", serverData);\n\n            // tell it who we are\n            data.Sender = Player.MemberNumber;\n\n            // send the chat to our window too\n            ChatRoomMessage(data);\n\n            // message was sent\n            return true;\n        }\n        return false;\n    }\n\n    // This starts /whisper+ if you click on the roster\n    public static sendWhisper(memberNumber: number): void {\n      for ( const command of Commands ) {\n        if (command.Tag == \"whisper+\") {\n          window.CommandSet(command.Tag + \" \" + memberNumber)\n        }\n      }\n    };\n\n    // this runs when a player enters the /whisper+ command or clicks the roster\n    public whisperplus(args: string, command: string): number {\n        // parse arguments into MEMBERNUMBER and messsage\n        const MEMBERNUMBER = parseInt(args.slice(0, args.indexOf(\" \")));\n        //const MESSAGE = args.slice(args.indexOf(\" \") + 1);\n        const MESSAGE = command.substring(command.indexOf(' ') + MEMBERNUMBER.toString().length + 2);\n\n        // if membernumber is not a valid number, bail\n        if (Number.isNaN(MEMBERNUMBER)) {\n            ChatRoomSendLocal(\"Member number is invalid.\", 30_000);\n            return 1;\n        }\n\n        if (MESSAGE == \"\") {\n            ChatRoomSendLocal(\"Message was blank\", 30_000);\n            return 1;\n        }\n\n        // find player based no membernumber\n        const TARGET = ChatRoomCharacter.find(\n            (C: any) => C.MemberNumber == MEMBERNUMBER\n        );\n        this.ChatRoomSendWhisperRanged(TARGET || MEMBERNUMBER, MESSAGE);\n        return 0;\n    }\n}\n","// import section\nimport bcModSDK from \"bondage-club-mod-sdk\";\nimport * as Modules from \"./modules\";\nimport loadDOM from \"./modules/dom\";\n\n// configure the version and mod name\nconst VERSION = \"1.2.0.1\";\nconst NAME = \"Crazy Roster Add-on By Sin\";\nconst NICKNAME = \"CRABS\";\n\n//register the mod\nconst CRABS = bcModSDK.registerMod({\n  name: NICKNAME,\n  fullName: NAME,\n  version: VERSION,\n  repository: \"https://github.com/sin-1337/CRABS\",\n});\n\nconst BANNER = new Modules.Banner(CRABS);\nconst WHISPERPLUS = new Modules.WhisperPlus(CRABS);\nconst ROSTER = new Modules.Roster(CRABS);\nconst HELP = new Modules.Help(CRABS);\nloadDOM();\n\n// print version and load success in console\nconsole.log(`CRABS v${VERSION} Loaded`);  // do not remove\n\n/*\n * Attaches an event listener to any object matching the supplied class\n *\n *@param classname - (string) name of the class you are looking for\n *@param action - (string) name of the function you want to call when the event is triggered\n *@param data - (string) [optional] arguments to the function, MUST be camel   \n *                                  case... ex: playerNumber\n *@param event - (string) [default = click] type of event you wish this to trigger on\n */\nfunction attachEvent(\n  classname: string,\n  action: string,\n  data?: string,\n  event: string = \"click\"\n) {\n  const CHAT = document.getElementById(\"TextAreaChatLog\");\n\n  if (!CHAT) return; // if chat is not found, bail\n  // Select all roster links\n  const ELEMENTS = CHAT.getElementsByClassName(\n    classname\n  ) as HTMLCollectionOf<HTMLElement>;\n\n  // Attach event listeners to all roster links\n  for (const ELEMENT of ELEMENTS) {\n    ELEMENT.addEventListener(event, (e) => { // add listener\n      const TARGET = e.currentTarget as HTMLElement; // capture target\n      if (data) {\n        const DATA = TARGET.dataset[data]; // parse data\n        (window as any)[action](DATA);\n      } else {\n        (window as any)[action]();\n      }\n    });\n  }\n}\n\n/*\n * draws the banner\n */\nfunction drawbanner() {\n  let output: string = \"\";\n  // if the player left the room, bail!\n  if (Player.LastChatRoom === null) {\n    // Must return false, even if we are bailing out!\n    return false;\n  }\n\n  // configure extra roster input to the banner\n  // TODO: make this optional in the future\n  let extradata = {\n    RosterCounters: ROSTER.buildroster(\"count\", false),\n  };\n  output = BANNER.drawBanner(NAME, VERSION, extradata);\n\n  // call the action to draw the banner\n  BANNER.sendoutput(output, \"CRABS_Banner\");\n\n  // make the roster footer /roster a clickable url\n  attachEvent(\"CRABS_banner_rosterlink\", \"printRoster\");\n}\n\n// TODO: create ui to turn this off!!\n// TODO: This only triggers on rooms I didn't make, why?\n// set up a handler for room entry\n// This sets up the banner!\nChatRoomRegisterMessageHandler({\n  Description: \"Send room stats on entry.\",\n  Priority: 0, // trigger immediately\n  Callback: (data: any) => {\n    // check if we are a player and we entered a room\n    if (\n      data.Type === \"Action\" &&\n      data.Content === \"ServerEnter\" &&\n      data.Sender === Player.MemberNumber\n    ) {\n      // work on a delay\n      setTimeout(() => {\n        // configure extra roster input to the banner\n        drawbanner();\n      }, 3600);\n    }\n\n    // Must return false to allow other handlers to work with the data.\n    return false;\n  },\n});\n\nfunction argcheck(args: string): boolean {\n  const SPLITARGS = args.split(\" \");\n  if (SPLITARGS[0].toLowerCase() == \"help\") {\n    HELP.sendoutput(HELP.showhelp(VERSION), \"CRABS_Help\");\n    return false;\n  } else if (SPLITARGS[0].toLowerCase() == \"version\") {\n    ChatRoomSendLocal(`${NAME} (${NICKNAME}) <br>Version: ${VERSION}`);\n    return false;\n  } else if (SPLITARGS[0].toLowerCase() == \"banner\") {\n    drawbanner();\n    return false;\n  }\n  return true;\n}\n\nfunction commandRedirect(command: string, args: string): void {\n  for (const [_, COMMAND] of Commands.entries()) {\n    if (COMMAND.Tag === command) {\n      COMMAND.Action(args);\n      break;\n    }\n  }\n}\n\n// implements the whisper+ command\nCommandCombine([\n  {\n    Tag: \"whisper+\",\n    Description:\n      \"Enables the /whisper+ command that does global whisper in a map room\",\n    Action: (args: string, command: string) => {\n      WHISPERPLUS.whisperplus(args, command);\n    },\n  },\n]);\n\nCommandCombine([\n  {\n    Tag: \"w+\",\n    Description:\n      \"Enables the /w+ command that does global whisper in a map room\",\n    Action: (args: string, command: string) => {\n      WHISPERPLUS.whisperplus(args, command);\n    },\n  },\n]);\n\n// implements the /crabs command\nCommandCombine([\n  {\n    Tag: \"crabs\",\n    Description: \"Show the player count, helpful in maps.\",\n    Action: (args: string) => {\n      commandRedirect(\"roster\", args);\n    },\n  },\n]);\n\n// implements the /roster command\nCommandCombine([\n  {\n    Tag: \"roster\",\n    Description: \"Show the player count, helpful in maps.\",\n    Action: (args: string) => {\n      if (argcheck(args))\n        ROSTER.sendoutput(ROSTER.buildroster(args), \"CRABS_Roster\");\n      ROSTER.initScrollingOverflow();\n      const elements = document.querySelectorAll<HTMLDivElement>(\n        \"div.ChatMessageNonDialogue\"\n      );\n\n      elements.forEach((element) => {\n        element.style.overflow = \"visible\";\n      });\n\n      //attach intractable roster events\n      attachEvent(\"CRABS_player-badge\", \"PlayerFocus\", \"playerNumber\");\n      attachEvent(\"CRABS_player-id\", \"sendWhisper\", \"playerNumber\");\n    },\n  },\n]);\n\n// implements the /players command\nCommandCombine([\n  {\n    Tag: \"players\",\n    Description: \"Deprecated: Show the player count, helpful in maps.\",\n    Action: (args: string) => {\n      commandRedirect(\"roster\", args);\n    },\n  },\n]);\n\n// implements /dropkeys command\nCommandCombine([\n  {\n    Tag: \"dropkeys\",\n    Description:\n      \"Drops the specified keys: gold, silver, or bronze. You can also use all.\",\n    Action: (args: string) => {\n      const splitArgs = args.toLowerCase().split(\" \");\n      if (splitArgs.length < 1) {\n        ChatRoomSendLocal(\n          `You must supply which key to drop, or 'all' to drop them all.`\n        );\n        return;\n      }\n      if (!ChatRoomMapViewIsActive()) {\n        ChatRoomSendLocal(`Key only work on a map...`);\n        return;\n      }\n      for (let i = 0; i < splitArgs.length; i++) {\n        if (splitArgs[i] == \"bronze\" || splitArgs[i] == \"all\") {\n          if (Player.MapData.PrivateState.HasKeyBronze) {\n            Player.MapData.PrivateState.HasKeyBronze = false;\n            ChatRoomSendLocal(`Bronze key dropped.`);\n          }\n        }\n        if (splitArgs[i] == \"silver\" || splitArgs[i] == \"all\") {\n          if (Player.MapData.PrivateState.HasKeySilver) {\n            Player.MapData.PrivateState.HasKeySilver = false;\n            ChatRoomSendLocal(`Silver key dropped.`);\n          }\n        }\n        if (splitArgs[i] == \"gold\" || splitArgs[i] == \"all\") {\n          if (Player.MapData.PrivateState.HasKeyGold) {\n            Player.MapData.PrivateState.HasKeyGold = false;\n            ChatRoomSendLocal(`Gold key dropped.`);\n          }\n        }\n        if (\n          splitArgs[i] != \"bronze\" &&\n          splitArgs[i] != \"silver\" &&\n          splitArgs[i] != \"gold\" &&\n          splitArgs[i] != \"all\"\n        ) {\n          ChatRoomSendLocal(`Argument '${splitArgs[i]}', was not understood.`);\n        }\n      }\n    },\n  },\n]);\n","import CRABS from \"../base\";\nimport { ModSDKModAPI } from \"bondage-club-mod-sdk\";\nimport \"./templates/banner.css\";\nimport bannertemplate from \"./templates/banner.html\";\n\nexport class Banner extends CRABS {\n  constructor(CRABS: ModSDKModAPI) {\n    super(CRABS);\n  }\n\n  public drawBanner(\n    name: string,\n    version: string,\n    extradata?: Record<string, string>\n  ): string {\n    // bail if ChatRoomData is null or blank \n    if (!ChatRoomData || Object.keys(ChatRoomData).length === 0) {\n        return \"ChatRoomData wasn't populated!\";\n    }\n    // get player permissions\n    const currentPermissionText = `${TextGetInScope(\n      \"Screens/Character/InformationSheet/Text_InformationSheet.csv\",\n      \"PermissionLevel\" + Player.ItemPermission.toString()\n    )} (${Player.ItemPermission})`;\n\n    // set up the template and populate the fields.\n    let templatevars = {\n      Logo: this.printlogo(),\n      Name: name,\n      Version: version,\n      LabelColor: `${Player.LabelColor}`,\n      PlayerPermission: currentPermissionText,\n      RoomName: ChatRoomData.Name,\n    };\n\n    if (extradata) Object.assign(templatevars, extradata);\n\n    return this.template(bannertemplate, templatevars);\n  }\n}\n","import CRABS from \"../base\";\nimport helptemplate from \"./templates/help.html\";\n\n\nexport class Help extends CRABS {\n\n  // show help\n  public showhelp(VERSION: string): string {\n    let output = `<table style=\"width: 100%\"><tr><td>\n            <span style=\" text-shadow: 0px 0px 3px #000000; white-space: normal;\">\n            <hr>\n            ${this.printlogo()}</br>\n            CRABS ${VERSION} help sheet</br>\n            /roster [optional argument] </br>\n            This command lists the number of admins and players\n            in a room and gives you some information about them </br>\n            \n            <br>\n            /roster Arguments: </br>\n            help - show this menu </br>\n            count - show only the player count </br>\n            admins - show only a list of admins and the counts </br>\n            vips - show only room whitelisted and the counts </br>\n            banner - draws the banner again </br>\n            version - shows the version of CRABS </br>\n\n            </br>\n            /whisper+ [player number] </br>\n            /w+ [player number] </br>\n            Command that lets you whisper at range on maps, \n            activated automatically by clicking the player\n            name in the roster. </br></br>\n\n            /dropkeys [gold silver bronze / all] </br>\n            Command that lets you drop your keys, you can \n            supply one or more key colors, or all to drop \n            all keys. </br>\n\n            </br>\n            Badges:\n            <hr>\n            ${this.printicon(\"admin\")} = Person is Admin</br>\n            ${this.printicon(\"vip\")} = Person is whitelisted in the room </br>\n            ${this.printicon(\"player\")} = Person is a normal user </br>\n\n            </br>\n            Icons:\n            <hr>\n            ${this.printicon(\"you\")} = Person is you </br>\n            ${this.printicon(\"owner\")} = Person is your owner </br>\n            ${this.printicon(\"sub\")} = Person is your submissive </br>\n            ${this.printicon(\"trial\")} = Person is on trial with you </br>\n            ${this.printicon(\"lover\")} = Person is your lover </br>`;\n\n    //prints only if the BCTweaks module is detected.\n    if (this.detectMod(\"BCTweaks\")) {\n      output += `${this.printicon(\n        \"bestfriend\"\n      )} = Person is a best friend </br>`;\n    }\n\n    output += `${this.printicon(\"friend\")} = Person is a friend </br>\n            ${this.printicon(\n              \"whitelist\"\n            )} = You have this person whitelisted </br>\n            ${this.printicon(\n              \"blacklist\"\n            )} = You have this person blacklisted </br>\n            ${this.printicon(\"ghost\")} = You have ghosted this person </br>\n\n            </br>\n            Status Icons:\n            <hr>\n            There are 3 icons on the right side of each player card.\n            They indicate if the player is gagged, blind, or deaf \n            and will light up to show this stats.</br>\n\n            </br>\n            Keys:\n            <hr>\n            When on a map, 3 key icons in the upper right corner of\n            the roster will light up as you collect the different keys. </br>\n\n            </br>\n            Actions:\n            <hr>\n            Click Badge - If you click the badge for a player it will \n            be as if you clicked them to interact. It shows the focus \n            screen.</br></br>\n            Click name - If you click the name/number of a player it \n            will activate whisper+ and let you whisper them without \n            range constraints. </br>\n            </span>\n            </td>\n            </tr>\n            </table>`;\n\n    let templatevars = {\n        \"HelpOutput\": output,\n    };\n    return(this.template(helptemplate, templatevars));\n  }\n}\n","import * as Modules from \".\"\n\nexport default function loadDOM() {\n    window.sendWhisper = Modules.WhisperPlus.sendWhisper;\n    window.PlayerFocus = Modules.Roster.showPlayerFocus;\n    window.printRoster = Modules.Roster.printRoster;\n}\n"],"names":["o","e","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","c","warn","s","f","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","l","precomputed","window","split","slice","join","encode","padStart","toUpperCase","d","originalHash","Object","assign","router","context","contextProperty","p","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","repository","allowReplace","apiEndpointEnter","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","globalThis","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","defineProperty","exports","value","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","create","SuppressedError","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","prototype","forEach","arrayLastIndexOf","lastIndexOf","arrayPop","pop","arrayPush","arraySplice","stringToLowerCase","String","toLowerCase","stringToString","stringMatch","match","stringReplace","replace","stringIndexOf","stringTrim","trim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","test","typeErrorCreate","func","TypeError","_len2","_key2","lastIndex","_len","_key","addToSet","array","transformCaseFunc","undefined","element","lcElement","cleanArray","index","clone","object","newObject","property","constructor","lookupGetter","prop","desc","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","NODE_TYPE","getGlobal","purify","createDOMPurify","DOMPurify","root","removed","document","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","trustedTypes","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","createHTML","createScriptURL","purifyHostElement","createPolicy","suffix","hasAttribute","getAttribute","policyName","scriptUrl","_","_createTrustedTypesPolicy","ALL_SVG_TAGS","ALL_MATHML_TAGS","_forceRemove","node","removeChild","_removeAttribute","attribute","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","textContent","attributes","namespaceURI","hasChildNodes","_isNode","_executeHooks","currentNode","data","_sanitizeElements","tagName","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childClone","__removalCount","parent","parentTagName","Boolean","_checkValidNamespace","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","entryPoint","removeHook","removeHooks","removeAllHooks","styleInject","css","ref","insertAt","head","style","type","styleSheet","cssText","CRABS$1","CRABS","ICONS","logo","admin","vip","player","you","owner","sub","trial","lover","bestfriend","friend","whitelist","blacklist","ghost","thought","connected","keyGold","keySilver","keyBronze","keyNull","blindNone","blindLight","blindNormal","blindHeavy","blindTotal","deafNone","deafLight","deafNormal","deafHeavy","deafTotal","gagNone","gagVeryLight","gagEasy","gagLight","gagNormal","gagMedium","gagHeavy","gagVeryHeavy","gagTotal","gagTotal2","gagTotal3","gagTotal4","crabs","showPlayerFocus","MemberNumber","PLAYER","ChatRoomCharacter","find","C","ChatRoomStatusUpdate","ChatRoomFocusCharacter","ChatRoomSendLocal","detectMod","targetmod","sendoutput","output","elementId","OUTPUT","CLEAN_HTML","CHAT","getElementById","EXISTING","WRAPPER","id","ElementScrollToEnd","log","plaintext","wrapper","regex","key","printlogo","printicon","tooltip","css_class","css_style","ICON","convertColor","hex","alpha","parseInt","substr","Roster","super","onlineFriends","lastSentTime","loadFriendList","printRoster","action","COMMAND","Commands","Tag","Action","initScrollingOverflow","containerSelector","querySelectorAll","scroller","querySelector","classList","removeProperty","requestAnimationFrame","scrollWidth","wrapperWidth","offsetWidth","scrollAmount","setProperty","setStatusIcons","PREFIXES","EFFECTS","CharacterGetEffects","EFFECT_LISTS","Blind","BlindLight","BlindNormal","BlindHeavy","BlindTotal","Gag","GagVeryLight","GagEasy","GagLight","GagNormal","GagMedium","GagHeavy","GagVeryHeavy","GagTotal","GagTotal2","GagTotal3","GagTotal4","Deaf","DeafLight","DeafNormal","DeafHeavy","DeafTotal","icons","updateIcon","prefix","effect","effectName","charAt","effectList","effectValue","startsWith","buildCard","badge","player_icons","templatevars","PlayerNumber","Badge","LabelColorBorder","_a","LabelColor","PlayerName","CharacterNickname","normalize","PlayerIcons","StatusIcons","DATA","Date","now","canSendServerRequest","getOnlineFriendCount","ServerSend","Query","CHECKONLINEFRIENDS","setTimeout","setbadge","ChatRoomData","Whitelist","Admin","setIcons","Player","OwnerNumber","IsInFamilyOfMemberNumber","IsOwnedByPlayer","_b","GetLoversNumbers","_c","BCT","bctSettings","bestFriendsList","FriendList","WhiteList","BlackList","GhostList","buildroster","SPLITARGS","me_output_html","admin_output_html","vip_output_html","player_output_html","admin_count","showme","showadmins","showvip","showplayers","output_html","person","Character","IsPlayer","some","item","adminIcon","adminsInRoom","totalAdmins","playerIcon","playersInRoom","totalPlayers","Limit","friendIcon","friendsOnline","totalFriends","FriendNames","connectedIcon","onlinePlayers","CurrentOnlinePlayers","ChatRoomMapViewIsActive","displaykeys","KEYS","MapData","PrivateState","HasKeyBronze","HasKeySilver","HasKeyGold","KEY","VALUE","output_rows","WhisperPlus","sendWhisper","ChatRoomSendWhisperRanged","target","msg","TARGETMEMEBER","ChatRoomSendLocalChatRoomSendLocal","TextGet","SELFMESSAGE","ChatRoomMapViewCharacterOnWhisperRange","ChatRoomGenerateChatRoomChatMessage","Target","serverData","Type","Sender","ChatRoomMessage","addChatMessage","memberNumber","command","CommandSet","whisperplus","MEMBERNUMBER","MESSAGE","substring","Number","isNaN","TARGET","NAME","bcModSDK","BANNER","drawBanner","extradata","keys","currentPermissionText","TextGetInScope","ItemPermission","Logo","Name","Version","PlayerPermission","RoomName","WHISPERPLUS","Modules.WhisperPlus","ROSTER","Modules.Roster","HELP","showhelp","VERSION","HelpOutput","attachEvent","classname","event","ELEMENTS","getElementsByClassName","ELEMENT","addEventListener","currentTarget","dataset","drawbanner","LastChatRoom","RosterCounters","commandRedirect","PlayerFocus","ChatRoomRegisterMessageHandler","Description","Priority","Callback","Content","CommandCombine","argcheck","overflow","splitArgs"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}